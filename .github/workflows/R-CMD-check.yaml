# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

name: R-CMD-check.yaml

permissions: read-all

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          # workaround for
          # -> https://github.com/laminlabs/laminr/issues/57
          # -> https://github.com/scipy/scipy/issues/21738
          # - { os: macos-13, r: "release" }
          - { os: macos-latest, r: "release" }
          - { os: windows-latest, r: "release" }
          - { os: ubuntu-latest, r: "devel", http-user-agent: "release" }
          - { os: ubuntu-latest, r: "release" }
          - { os: ubuntu-latest, r: "oldrel-1" }

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      LAMIN_API_KEY: ${{ secrets.LAMIN_API_KEY_TESTUSER1 }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-tinytex@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      # workaround for
      # -> https://github.com/laminlabs/laminr/issues/57
      # -> https://github.com/scipy/scipy/issues/21738
      - name: Set env
        if: runner.os == 'macOS'
        run: |
          echo "LDFLAGS=-L/opt/homebrew/opt/openblas/lib" >> $GITHUB_ENV
          echo "CPPFLAGS=-I/opt/homebrew/opt/openblas/include" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=/opt/homebrew/opt/openblas/lib/pkgconfig" >> $GITHUB_ENV
          brew install gcc
          echo "CC=gcc" >> $GITHUB_ENV
          echo "CXX=g++" >> $GITHUB_ENV
      # - name: Install openblas
      #   if: runner.os == 'macOS'
      #   run: |
      #     # brew install openblas

      - name: Install dependencies
        if: runner.os == 'macOS'
        run: |
          brew install openblas

      - name: install numpy
        if: runner.os == 'macOS'
        run: |
          OPENBLAS=$(brew --prefix openblas) CFLAGS="-falign-functions=8 ${CFLAGS}" pip install numpy
      
      - name: install scipy
        if: runner.os == 'macOS'
        run: |
          OPENBLAS=$(brew --prefix openblas) CFLAGS="-falign-functions=8 ${CFLAGS}" pip install scipy==1.12.0

      - name: Install lamindb
        run: |
          pip install lamindb[aws]

      - name: Log in to Lamin
        run: |
          lamin login

      - name: Set cellxgene as default instance
        run: |
          lamin connect laminlabs/cellxgene

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          build_args: 'c("--no-manual","--compact-vignettes=gs+qpdf")'
