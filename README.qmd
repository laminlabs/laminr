---
title: "LaminR: Work with LaminDB instances in R"
format: gfm
---

<!-- 
DO NOT edit the README.md directly.

Instead, edit the README.qmd file and render it using `quarto render README.qmd`. 
-->

<!-- badges: start -->
[![R-CMD-check](https://github.com/laminlabs/laminr/actions/workflows/R-CMD-check.yaml/badge.svg)](https://github.com/laminlabs/laminr/actions/workflows/R-CMD-check.yaml)
<!-- badges: end -->

This package allows you to query and download data from LaminDB instances.

## Setup

Install the development version from GitHub:

```R
# install.packages("remotes")
remotes::install_github("laminlabs/laminr")
```

To install all suggested dependencies required for some functionality, use:

```R
remotes::install_github("laminlabs/laminr", dependencies = TRUE)
```

You will also need to install `lamindb`:

```bash
pip install lamindb[aws]
```

## Connect to an instance

To connect to a LaminDB instance, you will first need to run `lamin login` OR `lamin load <instance>` in the terminal. This will create a directory in your home directory called `.lamin` with the necessary credentials.

```bash
lamin login
lamin connect laminlabs/cellxgene
```

Then, you can connect to the instance using the `laminr::connect()` function:

```{r setup}
library(laminr)

db <- connect("laminlabs/cellxgene")
db
```

## Query the instance

You can use the `db` object to query the instance:

```{r get_artifact}
artifact <- db$Artifact$get("KBW89Mf7IGcekja2hADu")
```

You can print the record:

```{r print_artifact}
artifact
```

Or call the `$describe()` method to get a summary:

```{r describe_artifact}
artifact$describe()
```

## Access fields

You can access its fields as follows:

* `artifact$id`: `r artifact$id`
* `artifact$uid`: `r artifact$uid`
* `artifact$key`: `r artifact$key`

You can also fetch related fields:

* `artifact$root`: `r artifact$storage$root`
* `artifact$created_by`: `r artifact$created_by$handle`

## Load the artifact

You can directly load the artifact to access its data:

```{r load_artifact}
artifact$load()
```
