---
title: LaminDB interface in R
format: gfm
---

<!-- badges: start -->
[![R-CMD-check](https://github.com/laminlabs/laminr/actions/workflows/R-CMD-check.yaml/badge.svg)](https://github.com/laminlabs/laminr/actions/workflows/R-CMD-check.yaml)
<!-- badges: end -->

This package provides an interface to the LaminDB database. It allows you to query the database and download data from it.

## Installation

You can install the development version from GitHub with:

```R
# install.packages("remotes")
remotes::install_github("laminlabs/laminr")
```

## Set up environment


For this package to work, we first need to run the following commands in the terminal:

```bash
pip install lamindb
lamin load laminlabs/cellxgene
```

This should create an `.env` file at `~/.lamin/current_instance.env` and `~/.lamin/instance--laminlabs--cellxgene.env` containing (amongst others) the following data:

    lamindb_instance_id=0123456789abcdefghijklmnopqrstuv
    lamindb_instance_owner=laminlabs
    lamindb_instance_name=cellxgene
    lamindb_instance_schema_id=0123456789abcdefghijklmnopqrstuv
    lamindb_instance_api_url=https://us-west-2.api.lamin.ai

:::{.callout-note}
The `.env` files don't store the `schema_id` and `api_url` yet, so instead we pass these settings via `options(lamindb_current_instance = ...)` (see below).
:::


## Usage

```{r setup}
library(laminr)
```

### Connect to a LaminDB instance

``` r
options(
  lamindb_current_instance = list(
    owner = "lamin",
    name = "example",
    id = "0123456789abcdefghijklmnopqrstuv",
    api_url = "https://us-west-2.api.lamin.ai",
    schema_id = "0123456789abcdefghijklmnopqrstuv"
  )
)

db <- laminr::connect()
```

```{r connect2, echo=FALSE}
db <- laminr::connect()
```

### Print a LaminDB instance

```{r print_instance}
db
```

<!--
### Print the Artifact class

```{r print_class}
db$Artifact
```

-->

### Get artifact

```{r get_artifact}
artifact <- db$Artifact$get("KBW89Mf7IGcekja2hADu")
```

### Print artifact

```{r print_artifact}
artifact
```

### Print simple fields

```{r print_simple_fields}
artifact$id

artifact$uid

artifact$key
```

### Print related fields

```{r print_related_fields}
artifact$storage

artifact$created_by
```

### Cache artifact

:::{.callout-note}
Only S3 storage is supported at the moment.
:::

```{r cache_artifact}
artifact$cache()
```

### Load artifact

:::{.callout-note}
Only S3 storage and AnnData accessors are supported at the moment.
:::

```{r load_artifact}
artifact$load()
```
