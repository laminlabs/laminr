---
title: LaminDB interface in R
format: gfm
---

This package provides an interface to the LaminDB database. It allows you to query the database and download data from it.

## Installation

You can install the development version from GitHub with:

```R
# install.packages("remotes")
remotes::install_github("laminlabs/laminr")
```

<!--
## Set up environment


For this package to work, we first need to run the following commands in the terminal:

```python
pip install lamindb
```

```bash
lamin load laminlabs/cellxgene
```

This should create an `.env` file at `~/.lamin/instance--laminlabs--cellxgene.env` and `~/.lamin/current_instance.env` containing an `instance_id`, `schema_id` and `api_url`, e.g.:

    # instance--laminlabs--cellxgene.env
    instance_id = "0123456789abcdefghijklmnopqrstuv"
    schema_id = "0123456789abcdefghijklmnopqrstuv"
    api_url = "https://us-west-2.api.lamin.ai"

:::{.callout-note}
laminr doesn't detect the `.env` yet, so you need to provide the `instance_id`, `schema_id` and `api_url` manually.
:::

-->

## Example

This is a basic example which shows you how to solve a common problem:

```{r setup}
library(laminr)
```

### Connect to a LaminDB instance

```{r connect, eval=FALSE}
options(
  lamindb_current_instance = list(
    owner = "lamin",
    name = "example",
    url = "https://us-west-2.api.lamin.ai",
    instance_id = "0123456789abcdefghijklmnopqrstuv",
    schema_id = "0123456789abcdefghijklmnopqrstuv"
  )
)

db <- laminr::connect()
```

```{r connect2, echo=FALSE}
db <- laminr::connect()
```

### Print a LaminDB instance

```{r print_instance}
db
```

### Print the Artifact class

```{r print_class}
db$Artifact
```

### Get artifact

```{r get_artifact}
artifact <- db$Artifact$get("KBW89Mf7IGcekja2hADu")
```

### Print artifact

```{r print_artifact}
artifact
```

### Print simple fields

```{r print_simple_fields}
artifact$id

artifact$uid

artifact$key
```

### Print related fields

```{r print_related_fields}
artifact$storage

artifact$created_by
```
