% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_Record.R
\name{APIRecord}
\alias{APIRecord}
\title{APIRecord}
\description{
A record from a registry.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-APIRecord-new}{\code{APIRecord$new()}}
\item \href{#method-APIRecord-delete}{\code{APIRecord$delete()}}
\item \href{#method-APIRecord-print}{\code{APIRecord$print()}}
\item \href{#method-APIRecord-to_string}{\code{APIRecord$to_string()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-APIRecord-new"></a>}}
\if{latex}{\out{\hypertarget{method-APIRecord-new}{}}}
\subsection{Method \code{new()}}{
Creates an instance of this R6 class. This class should not be instantiated directly,
but rather by connecting to a LaminDB instance using the \code{\link[=api_connect]{api_connect()}} function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIRecord$new(instance, registry, api, data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{instance}}{The instance the record belongs to.}

\item{\code{registry}}{The registry the record belongs to.}

\item{\code{api}}{The API for the instance.}

\item{\code{data}}{The data for the record.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-APIRecord-delete"></a>}}
\if{latex}{\out{\hypertarget{method-APIRecord-delete}{}}}
\subsection{Method \code{delete()}}{
Delete a \code{APIRecord}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIRecord$delete(verbose = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verbose}}{Whether to print details of the API call}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{TRUE} invisibly if the deletion is successful
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-APIRecord-print"></a>}}
\if{latex}{\out{\hypertarget{method-APIRecord-print}{}}}
\subsection{Method \code{print()}}{
Print a \code{APIRecord}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIRecord$print(style = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{style}}{Logical, whether the output is styled using ANSI codes}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-APIRecord-to_string"></a>}}
\if{latex}{\out{\hypertarget{method-APIRecord-to_string}{}}}
\subsection{Method \code{to_string()}}{
Create a string representation of a \code{APIRecord}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIRecord$to_string(style = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{style}}{Logical, whether the output is styled using ANSI codes}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{cli::cli_ansi_string} if \code{style = TRUE} or a character vector
}
}
}
