% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/install.R
\name{install_lamindb}
\alias{install_lamindb}
\title{Install LaminDB}
\usage{
install_lamindb(
  ...,
  envname = "r-lamindb",
  extra_packages = NULL,
  new_env = identical(envname, "r-lamindb"),
  use = TRUE
)
}
\arguments{
\item{...}{Additional arguments passed to \code{reticulate::py_install()}}

\item{envname}{String giving the name of the environment to install packages
into}

\item{extra_packages}{A vector giving the names of additional Python packages
to install}

\item{new_env}{Whether to remove any existing \code{virtualenv} with the same name
before creating a new one with the requested packages}

\item{use}{Whether to attempt use the new environment}
}
\value{
\code{NULL}, invisibly
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}

This function is deprecated and is replaced by a system which automatically
installs packages as needed. See \code{\link[=import_module]{import_module()}}, \code{\link[=require_module]{require_module()}} and
\code{\link[reticulate:py_require]{reticulate::py_require()}} for details.

Create a Python environment containing \strong{lamindb} or install \strong{lamindb}
into an existing environment.
}
\examples{
\dontrun{
# Using import_module() will automatically install packages
ln <- import_module("lamindb")

# Create a Python environment with lamindb
# This approach is deprecated
install_lamindb()

# Add additional packages to the environment
install_lamindb(extra_packages = c("bionty", "wetlab"))

# Install into a different environment
install_lamindb(envvname = "your-env")
}
}
\keyword{internal}
