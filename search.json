[{"path":[]},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"minor-changes","dir":"","previous_headings":"","what":"MINOR CHANGES","title":"laminr devel","text":"Update reticulate dependency >= 1.38.0 (PR #158) Use {rmarkdown} instead {quarto} articles (PR #159)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"bug-fixes","dir":"","previous_headings":"","what":"BUG FIXES","title":"laminr devel","text":"Properly clear delete temporary instances created using lamin_init_temp() (PR #189)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"documentation","dir":"","previous_headings":"","what":"DOCUMENTATION","title":"laminr devel","text":"Update feel structure documentation website (PR #159) Update welcome vignette point main LaminDB documentation website (PR #190)","code":""},{"path":[]},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"minor-changes-1","dir":"","previous_headings":"","what":"MINOR CHANGES","title":"laminr devel","text":"Update dependencies fix CRAN issues (PR #156)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"laminr-v100","dir":"","previous_headings":"","what":"laminr v1.0.0","title":"laminr devel","text":"LaminR now feature parity LaminDB (PR #146). Migration guide: Run install_lamindb(), ensure lamindb >= 1.2 Python environment used reticulate. Replace db <- connect() ln <- import_module(\"lamindb\") see table . ln object largely similar db object {laminr} < v1 matches lamindb’s Python API replacing . $. See updated “Get started” vignette information. User-facing changes: Add import_module() function import Python modules additional functionality, e.g., import_module(\"lamindb\") lamindb Add functions accessing lamin CLI commands Add new “Introduction” vignette replicates code Python lamindb introduction guide Internal changes: Add internal wrap_python() function wrap Python objects replacing Python methods R methods needed, leaving work {reticulate} Update internal check_requires() function handle Python packages Add custom cache()/load() methods Artifact class Add custom track()/finish() methods lamindb module","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"minor-changes-2","dir":"","previous_headings":"","what":"MINOR CHANGES","title":"laminr devel","text":"Skip tests require Python CRAN (PR #153).","code":""},{"path":[]},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"minor-changes-3","dir":"","previous_headings":"","what":"MINOR CHANGES","title":"laminr devel","text":"Bump R dependency >= 4.1.0 fix note CRAN (PR #142).","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"laminr-v040","dir":"","previous_headings":"","what":"laminr v0.4.0","title":"laminr devel","text":"Minor (breaking) changes support Python lamindb v1.0 release.","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"breaking-changes","dir":"","previous_headings":"","what":"BREAKING CHANGES","title":"laminr devel","text":"Updates compatibility Python lamindb v1.0 release (PR #136)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"minor-changes-4","dir":"","previous_headings":"","what":"MINOR CHANGES","title":"laminr devel","text":"db$track() can now automatically create transform UID supplied (PR #136)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"laminr-v031","dir":"","previous_headings":"","what":"laminr v0.3.1","title":"laminr devel","text":"release improves UX setting Python environment adds functions allow access CLI functionality R.","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"new-functionality","dir":"","previous_headings":"","what":"NEW FUNCTIONALITY","title":"laminr devel","text":"Add install_lamindb() function help setting default Python environment (PR #129). Add lamin_login() lamin_connect() functions allow access CLI functionality R (PR #129).","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"documentation-1","dir":"","previous_headings":"","what":"DOCUMENTATION","title":"laminr devel","text":"Add set vignette update documentation instructions set Python environment (PR #129).","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"laminr-v030","dir":"","previous_headings":"","what":"laminr v0.3.0","title":"laminr devel","text":"release contains mostly UX improvements: Support interacting private LaminDB instances Support interacting TileDB-SOMA / CELLxGENE Census Improved UX tracking finishing runs","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"new-functionality-1","dir":"","previous_headings":"","what":"NEW FUNCTIONALITY","title":"laminr devel","text":"Allow tracking artifacts loaded non-default instances (PR #124). Interact TileDB-SOMA stores (PR #117). Add open() method Artifact class connect TileDB-SOMA stores.","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"minor-changes-5","dir":"","previous_headings":"","what":"MINOR CHANGES","title":"laminr devel","text":"Improve UX db$track() db$finish() (PR #120).","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"bug-fixes-1","dir":"","previous_headings":"","what":"BUG FIXES","title":"laminr devel","text":"Allow connecting private LaminDB instances (PR #118). Fix error message fetching instance details fails (PR #123).","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"testing","dir":"","previous_headings":"","what":"TESTING","title":"laminr devel","text":"Use host system user tests (PR #119)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"documentation-2","dir":"","previous_headings":"","what":"DOCUMENTATION","title":"laminr devel","text":"Update laminr Getting Started vignette feedback demo (PR #113). Update roadmap (PR #112). Simplify README content (PR #116).","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"laminr-v020","dir":"","previous_headings":"","what":"laminr v0.2.0","title":"laminr devel","text":"release adds support creating new artifacts LaminDB instance.","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"new-functionality-2","dir":"","previous_headings":"","what":"NEW FUNCTIONALITY","title":"laminr devel","text":"Add support loaders (PR #81). Currently supported: .csv, .h5ad, .html, .jpg, .json, .parquet, .png, .rds, .svg, .tsv, .yaml. Add from_df() method Registry class create new artifacts data frames (PR #78) Create TemporaryRecord classes new artifacts saved database (PR #78) Add delete() method Record class (PR #78) Add track() finish() methods Instance class (PR #83) Add from_path() method Registry class create new artifacts paths (PR #85) Add from_anndata() method Registry class create new artifacts AnnData objects (PR #85) Add RStudio add-saving notebook (PR #90).","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"major-changes","dir":"","previous_headings":"","what":"MAJOR CHANGES","title":"laminr devel","text":"Running connect(slug = NULL) now connects default instance allowed create records. default instance must changed using Lamin CLI. (PR #78) User setting stored global option first time connect() run (PR #78)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"minor-changes-6","dir":"","previous_headings":"","what":"MINOR CHANGES","title":"laminr devel","text":"Adjusted argument order Instance$track() improved Python error handling (PR #89)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"testing-1","dir":"","previous_headings":"","what":"TESTING","title":"laminr devel","text":"Add test creating artifacts data frames (PR #78). Add tests creating artifacts paths AnnData objects (PR #85)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"documentation-3","dir":"","previous_headings":"","what":"DOCUMENTATION","title":"laminr devel","text":"Updated installation instructions {laminr} released CRAN (PR #74). Updated architecture vignette include new methods new TemporaryRecord class (PR #78, PR #83, PR #85) Updated development vignette new functionality (PR #78, PR #83, PR #85)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"laminr-v010","dir":"","previous_headings":"","what":"laminr v0.1.0","title":"laminr devel","text":"First CRAN release LaminDB API client R. release focuses connecting LaminDB instance, fetching individual record instance, fetching related data record. Features: Connect LaminDB instance Auto-generate modules classes instance schema Fetch record Fetch record’s related data Fetch record summary table Cache S3 artifact Load AnnData artifact information, please visit package website.","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"new-functionality-3","dir":"","previous_headings":"","what":"NEW FUNCTIONALITY","title":"laminr devel","text":"Query instance settings Lamin Hub (PR #8). Read user settings env file created lamin Python package (PR #2, PR #8). Add to_string() print() methods Record class (incomplete) describe() method Artifact() class (PR #22). Add to_string() print() methods remaining classes (PR #31) Add InstanceAPI$get_records() Registry$df() methods (PR #54) Add RelatedRecords class RelatedRecords$df() method (PR #59)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"major-changes-1","dir":"","previous_headings":"","what":"MAJOR CHANGES","title":"laminr devel","text":"Refactored internal class data structures better modularity extensibility (PR #8). Added GitHub actions project (PR #11): Standard R-CMD-check workflow. Linting action. Commands roxygenizing (/document) restyling source code (/style). Allow unauthenticated users connect instance ran lamin connect <instance> beforehand (PR #19).","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"minor-changes-7","dir":"","previous_headings":"","what":"MINOR CHANGES","title":"laminr devel","text":"complain foreign keys found record, also complain (PR #13). Define current user current instance lamin-cli prior testing generating documentation CI (PR #23). Add progress bars Artifact$cache() (PR #58) Remove link tables object print output (PR #55) Improve checking suggested packages provide installation instructions missing (PR #56) Add status code API error messages (PR #70) Adjust colours print output (PR #69) Modify Registry print output separate relational fields module (PR #71)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"testing-2","dir":"","previous_headings":"","what":"TESTING","title":"laminr devel","text":"Add simple unit test queries laminlabs/lamindata (PR #27). Added unit test InstanceAPI class (PR #30). Add regular expression API test missing records (PR #70)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"documentation-4","dir":"","previous_headings":"","what":"DOCUMENTATION","title":"laminr devel","text":"Update README new set instructions simplify (PR #14). Add pkgdown website project (PR #13). simplify README, move detailed usage description separate vignette (PR #13). Generate vignettes using Quarto (PR #13). Add vignette showcase laminr usage (PR #18). Replace mentions lamin load lamin connect (PR #29). Improve README (PR #29). Set Python requirements lamindb[aws] now (PR #33). changed lamin_cli laminlabs/lamin-cli#90 solved. Improve documentation installing suggested dependencies required (PR #56). Update README give better overview package (PR #67). Rename usage vignette laminr added overview core concepts LaminDB (PR #67). Update architecture vignette relate class structure package core concepts (PR #67). Add development vignette document list current, planned unplanned functionality (PR #67). Add vignettes document registries core, bionty, wetlab modules (PR #67).","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"bug-fixes-2","dir":"","previous_headings":"","what":"BUG FIXES","title":"laminr devel","text":"Fixed parsing env files ~/.lamin due changes lamindb-setup Python package (PR #12). Return NULL record’s related field empty (PR #28). Add alternative error message message returned API (PR #30). Handle error detail returned API list (PR #59) Manually install OpenBLAS macOS (PR #62). Switch Python 3.12 able install scipy macOS (PR #66).","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"laminr-v001","dir":"","previous_headings":"","what":"laminr v0.0.1","title":"laminr devel","text":"Initial POC implementation LaminDB API client R. Functionality: Connect LaminDB instance Fetch instance schema Auto-generate classes schema See available modules classes Get record Get record’s related data Cache S3 artifact Load AnnData artifact","code":""},{"path":"https://laminr.lamin.ai/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://laminr.lamin.ai/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://laminr.lamin.ai/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://laminr.lamin.ai/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://laminr.lamin.ai/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://laminr.lamin.ai/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://laminr.lamin.ai/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://laminr.lamin.ai/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://laminr.lamin.ai/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://laminr.lamin.ai/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://laminr.lamin.ai/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Introduction","text":"Install {laminr} CRAN: Set default LaminDB instance: instance acts default instance everything follows. data tracking information added . don’t access instance, create local test instance.","code":"install.packages(\"laminr\", dependencies = TRUE) laminr::lamin_connect(\"<owner>/<name>\") lamin_init_temp(\"laminr-intro\", modules = c(\"bionty\"))"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"import","dir":"Articles","previous_headings":"","what":"Import","title":"Introduction","text":"start working {laminr}, import lamindb module: equivalent import lamindb ln Python.","code":"ln <- import_module(\"lamindb\") #> → connected lamindb: testuser1/laminr-intro-20250422075248"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"walkthrough","dir":"Articles","previous_headings":"","what":"Walkthrough","title":"Introduction","text":"section vignette reproduces walkthrough LaminDB Introduction guide. equivalent {laminr} code included , related text see associated links. See https://docs.lamin.ai/guide#walkthrough.","code":""},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"transforms","dir":"Articles","previous_headings":"Walkthrough","what":"Transforms","title":"Introduction","text":"See https://docs.lamin.ai/guide#transforms.","code":"ln <- import_module(\"lamindb\") ln$track() #> → created Transform('MHzdiX2E8i6I0000'), started new Run('Eo3PL2tr...') at 2025-04-22 07:53:10 UTC  ln$Transform$df() #>                uid              key      description     type source_code hash #> 1 MHzdiX2E8i6I0000 introduction.Rmd introduction.Rmd notebook        <NA> <NA> #>   reference reference_type space_id _template_id version is_latest #> 1      <NA>           <NA>        1         <NA>    <NA>      TRUE #>            created_at created_by_id _aux _branch_code #> 1 2025-04-22 07:53:10             1 <NA>            1  ln$Run$df() #>                    uid name          started_at finished_at reference #> 1 Eo3PL2trrsrpG9a9iica <NA> 2025-04-22 07:53:10        <NA>      <NA> #>   reference_type _is_consecutive _status_code space_id transform_id report_id #> 1           <NA>            <NA>            0        1            1      <NA> #>   _logfile_id environment_id initiated_by_run_id          created_at #> 1        <NA>           <NA>                <NA> 2025-04-22 07:53:10 #>   created_by_id _aux _branch_code #> 1             1 <NA>            1"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"artifacts","dir":"Articles","previous_headings":"Walkthrough","what":"Artifacts","title":"Introduction","text":"Artifacts objects bundle data associated metadata. artifact can file folder typically dataset. See https://docs.lamin.ai/guide#artifacts.","code":"df <- ln$core$datasets$small_dataset1(otype = \"DataFrame\", with_typo = TRUE) df #>         ENSG00000153563 ENSG00000010610 ENSG00000170458 perturbation #> sample1               1               3               5         DMSO #> sample2               2               4               6         IFNJ #> sample3               3               5               7         DMSO #>         sample_note             cell_type_by_expert cell_type_by_model #> sample1      was ok                          B cell             B cell #> sample2  looks naah CD8-positive, alpha-beta T cell             T cell #> sample3  pretty! 🤩 CD8-positive, alpha-beta T cell             T cell #>           assay_oid concentration treatment_time_h donor #> sample1 EFO:0008913          0.1%               24 D0001 #> sample2 EFO:0008913        200 nM               24 D0002 #> sample3 EFO:0008913          0.1%                6  <NA>  artifact <- ln$Artifact$from_df(df, key = \"my_datasets/rnaseq1.parquet\")$save() artifact$describe() #> Artifact .parquet/DataFrame #> └── General #>     ├── .uid = 'WONCrVTVMlyqjrUE0000' #>     ├── .key = 'my_datasets/rnaseq1.parquet' #>     ├── .size = 8530 #>     ├── .hash = 'hDTNFwEPy7pY1EKnOHog2A' #>     ├── .n_observations = 3 #>     ├── .path =  #>     │   /tmp/RtmpEVJ0jl/laminr-intro-20250422075248/.lamindb/WONCrVTVMlyqjrUE000 #>     │   0.parquet #>     ├── .created_by = testuser1 (Test User1) #>     ├── .created_at = 2025-04-22 07:53:11 #>     └── .transform = 'introduction.Rmd'  artifact$cache() #> [1] \"/tmp/RtmpEVJ0jl/laminr-intro-20250422075248/.lamindb/WONCrVTVMlyqjrUE0000.parquet\"  dataset <- artifact$open() as.data.frame(dataset) #> # A tibble: 3 × 12 #>   ENSG00000153563 ENSG00000010610 ENSG00000170458 perturbation sample_note #>             <dbl>           <dbl>           <dbl> <fct>        <chr>       #> 1               1               3               5 DMSO         was ok      #> 2               2               4               6 IFNJ         looks naah  #> 3               3               5               7 DMSO         pretty! 🤩  #> # ℹ 7 more variables: cell_type_by_expert <fct>, cell_type_by_model <fct>, #> #   assay_oid <fct>, concentration <chr>, treatment_time_h <dbl>, donor <chr>, #> #   `__index_level_0__` <chr>  artifact$load() #>         ENSG00000153563 ENSG00000010610 ENSG00000170458 perturbation #> sample1               1               3               5         DMSO #> sample2               2               4               6         IFNJ #> sample3               3               5               7         DMSO #>         sample_note             cell_type_by_expert cell_type_by_model #> sample1      was ok                          B cell             B cell #> sample2  looks naah CD8-positive, alpha-beta T cell             T cell #> sample3  pretty! 🤩 CD8-positive, alpha-beta T cell             T cell #>           assay_oid concentration treatment_time_h donor #> sample1 EFO:0008913          0.1%               24 D0001 #> sample2 EFO:0008913        200 nM               24 D0002 #> sample3 EFO:0008913          0.1%                6  <NA>  artifact$view_lineage() #> ✖ `view_lineage()` is not yet implemented. Please view the lineage in the web interface.  df_typo <- df levels(df$perturbation) <- c(\"DMSO\", \"IFNG\") df[\"sample2\", \"perturbation\"] <- \"IFNG\" artifact <- ln$Artifact$from_df(df, key = \"my_datasets/rnaseq1.parquet\")$save() #> → creating new artifact version for key='my_datasets/rnaseq1.parquet' (storage: '/tmp/RtmpEVJ0jl/laminr-intro-20250422075248') artifact$versions$df() #>                    uid                         key description   suffix    kind #> 2 WONCrVTVMlyqjrUE0001 my_datasets/rnaseq1.parquet        <NA> .parquet dataset #> 1 WONCrVTVMlyqjrUE0000 my_datasets/rnaseq1.parquet        <NA> .parquet dataset #>       otype size                   hash n_files n_observations _hash_type #> 2 DataFrame 8530 RVElCjRCfyOAxbLNDEAMOg    <NA>              3        md5 #> 1 DataFrame 8530 hDTNFwEPy7pY1EKnOHog2A    <NA>              3        md5 #>   _key_is_virtual _overwrite_versions space_id storage_id schema_id version #> 2            TRUE               FALSE        1          1      <NA>    <NA> #> 1            TRUE               FALSE        1          1      <NA>    <NA> #>   is_latest run_id          created_at created_by_id _aux _branch_code #> 2      TRUE      1 2025-04-22 07:53:12             1 <NA>            1 #> 1     FALSE      1 2025-04-22 07:53:11             1 <NA>            1"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"labels","dir":"Articles","previous_headings":"Walkthrough","what":"Labels","title":"Introduction","text":"See https://docs.lamin.ai/guide#labels.","code":"bt <- import_module(\"bionty\")  experiment_type <- ln$ULabel(name = \"Experiment\", is_type = TRUE)$save() candidate_marker_experiment <- ln$ULabel(   name = \"Candidate marker experiment\", type = experiment_type )$save()  artifact$ulabels$add(candidate_marker_experiment)  cell_type <- bt$CellType$from_source(name = \"effector T cell\")$save() #> ... synchronizing df_all__cl__2024-08-16__CellType.parquet:  0.0%... synchronizing df_all__cl__2024-08-16__CellType.parquet:  6.3%... synchronizing df_all__cl__2024-08-16__CellType.parquet: 30.6%... synchronizing df_all__cl__2024-08-16__CellType.parquet: 42.6%... synchronizing df_all__cl__2024-08-16__CellType.parquet: 66.9%... synchronizing df_all__cl__2024-08-16__CellType.parquet: 91.2%... synchronizing df_all__cl__2024-08-16__CellType.parquet: 100.0% artifact$cell_types$add(cell_type)  artifact$describe() #> Artifact .parquet/DataFrame #> ├── General #> │   ├── .uid = 'WONCrVTVMlyqjrUE0001' #> │   ├── .key = 'my_datasets/rnaseq1.parquet' #> │   ├── .size = 8530 #> │   ├── .hash = 'RVElCjRCfyOAxbLNDEAMOg' #> │   ├── .n_observations = 3 #> │   ├── .path =  #> │   │   /tmp/RtmpEVJ0jl/laminr-intro-20250422075248/.lamindb/WONCrVTVMlyqjrUE000 #> │   │   1.parquet #> │   ├── .created_by = testuser1 (Test User1) #> │   ├── .created_at = 2025-04-22 07:53:12 #> │   └── .transform = 'introduction.Rmd' #> └── Labels #>     └── .cell_types         bionty.CellType    effector T cell                   #>         .ulabels            ULabel             Candidate marker experiment"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"registries","dir":"Articles","previous_headings":"Walkthrough","what":"Registries","title":"Introduction","text":"See https://docs.lamin.ai/guide#registries.","code":"ln$ULabel$df() #>        uid                        name is_type description reference #> 2 y4e9MosQ Candidate marker experiment   FALSE        <NA>      <NA> #> 1 q9rOWJ2U                  Experiment    TRUE        <NA>      <NA> #>   reference_type space_id type_id run_id          created_at created_by_id _aux #> 2           <NA>        1       1      1 2025-04-22 07:53:12             1 <NA> #> 1           <NA>        1     NaN      1 2025-04-22 07:53:12             1 <NA> #>   _branch_code #> 2            1 #> 1            1  ln$Artifact #> Artifact #>   Simple fields #>     .uid: CharField #>     .key: CharField #>     .description: CharField #>     .suffix: CharField #>     .kind: CharField #>     .otype: CharField #>     .size: BigIntegerField #>     .hash: CharField #>     .n_files: BigIntegerField #>     .n_observations: BigIntegerField #>     .version: CharField #>     .is_latest: BooleanField #>     .created_at: DateTimeField #>     .updated_at: DateTimeField #>   Relational fields #>     .space: Space #>     .storage: Storage #>     .run: Run #>     .schema: Schema #>     .created_by: User #>     .ulabels: ULabel #>     .input_of_runs: Run #>     .feature_sets: Schema #>     .collections: Collection #>     .references: Reference #>     .projects: Project #>   Bionty fields #>     .organisms: bionty.Organism #>     .genes: bionty.Gene #>     .proteins: bionty.Protein #>     .cell_markers: bionty.CellMarker #>     .tissues: bionty.Tissue #>     .cell_types: bionty.CellType #>     .diseases: bionty.Disease #>     .cell_lines: bionty.CellLine #>     .phenotypes: bionty.Phenotype #>     .pathways: bionty.Pathway #>     .experimental_factors: bionty.ExperimentalFactor #>     .developmental_stages: bionty.DevelopmentalStage #>     .ethnicities: bionty.Ethnicity #>  signature: (*args, **kwargs)"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"query-search","dir":"Articles","previous_headings":"Walkthrough","what":"Query & search","title":"Introduction","text":"See https://docs.lamin.ai/guide#query-search.","code":"transform <- ln$Transform$get(key = \"introduction.Rmd\")  ln$Artifact$filter(key__startswith = \"my_datasets/\")$df() #>                    uid                         key description   suffix    kind #> 1 WONCrVTVMlyqjrUE0000 my_datasets/rnaseq1.parquet        <NA> .parquet dataset #> 2 WONCrVTVMlyqjrUE0001 my_datasets/rnaseq1.parquet        <NA> .parquet dataset #>       otype size                   hash n_files n_observations _hash_type #> 1 DataFrame 8530 hDTNFwEPy7pY1EKnOHog2A    <NA>              3        md5 #> 2 DataFrame 8530 RVElCjRCfyOAxbLNDEAMOg    <NA>              3        md5 #>   _key_is_virtual _overwrite_versions space_id storage_id schema_id version #> 1            TRUE               FALSE        1          1      <NA>    <NA> #> 2            TRUE               FALSE        1          1      <NA>    <NA> #>   is_latest run_id          created_at created_by_id _aux _branch_code #> 1     FALSE      1 2025-04-22 07:53:11             1 <NA>            1 #> 2      TRUE      1 2025-04-22 07:53:12             1 <NA>            1  artifacts <- ln$Artifact$filter(transform = transform)$all()  artifacts <- ln$Artifact$filter(   transform__description__icontains = \"intro\", ulabels = candidate_marker_experiment )$all()  ln$Transform$search(\"intro\")$df() #>                uid              key      description     type source_code hash #> 1 MHzdiX2E8i6I0000 introduction.Rmd introduction.Rmd notebook        <NA> <NA> #>   reference reference_type space_id _template_id version is_latest #> 1      <NA>           <NA>        1         <NA>    <NA>      TRUE #>            created_at created_by_id _aux _branch_code #> 1 2025-04-22 07:53:10             1 <NA>            1 ulabels <- ln$ULabel$lookup() cell_types <- bt$CellType$lookup()"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"features","dir":"Articles","previous_headings":"Walkthrough","what":"Features","title":"Introduction","text":"See https://docs.lamin.ai/guide#features.","code":"ln$Feature(name = \"temperature\", dtype = \"float\")$save() #> Feature(uid='b8az7BEwsibP', name='temperature', dtype='float', array_rank=0, array_size=0, space_id=1, created_by_id=1, run_id=1, created_at=2025-04-22 07:53:28 UTC)  ln$Feature(name = \"experiment\", dtype = ln$ULabel)$save() #> Feature(uid='IX7bOWy8nIfz', name='experiment', dtype='cat[ULabel]', array_rank=0, array_size=0, space_id=1, created_by_id=1, run_id=1, created_at=2025-04-22 07:53:28 UTC)  artifact$features$add_values(   list(\"temperature\" = 21.6, \"experiment\" = \"Candidate marker experiment\") )  artifact$describe() #> Artifact .parquet/DataFrame #> ├── General #> │   ├── .uid = 'WONCrVTVMlyqjrUE0001' #> │   ├── .key = 'my_datasets/rnaseq1.parquet' #> │   ├── .size = 8530 #> │   ├── .hash = 'RVElCjRCfyOAxbLNDEAMOg' #> │   ├── .n_observations = 3 #> │   ├── .path =  #> │   │   /tmp/RtmpEVJ0jl/laminr-intro-20250422075248/.lamindb/WONCrVTVMlyqjrUE000 #> │   │   1.parquet #> │   ├── .created_by = testuser1 (Test User1) #> │   ├── .created_at = 2025-04-22 07:53:12 #> │   └── .transform = 'introduction.Rmd' #> ├── Linked features #> │   └── experiment          cat[ULabel]        Candidate marker experiment       #> │       temperature         float              21.6                              #> └── Labels #>     └── .cell_types         bionty.CellType    effector T cell                   #>         .ulabels            ULabel             Candidate marker experiment  ln$Artifact$features$filter(experiment__contains = \"marker experiment\")$df() #>                    uid                         key description   suffix    kind #> 2 WONCrVTVMlyqjrUE0001 my_datasets/rnaseq1.parquet        <NA> .parquet dataset #>       otype size                   hash n_files n_observations _hash_type #> 2 DataFrame 8530 RVElCjRCfyOAxbLNDEAMOg    <NA>              3        md5 #>   _key_is_virtual _overwrite_versions space_id storage_id schema_id version #> 2            TRUE               FALSE        1          1      <NA>    <NA> #>   is_latest run_id          created_at created_by_id _aux _branch_code #> 2      TRUE      1 2025-04-22 07:53:12             1 <NA>            1"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"key-use-cases","dir":"Articles","previous_headings":"","what":"Key use cases","title":"Introduction","text":"section reproduces key use cases LaminDB Introduction guide. See https://docs.lamin.ai/guide#key-use-cases.","code":""},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"understand-data-lineage","dir":"Articles","previous_headings":"Key use cases","what":"Understand data lineage","title":"Introduction","text":"See https://docs.lamin.ai/guide#understand-data-lineage.","code":"artifact$view_lineage() #> ✖ `view_lineage()` is not yet implemented. Please view the lineage in the web interface. transform$view_lineage() #> ✖ `view_lineage()` is not yet implemented. Please view the lineage in the web interface. # Example only, not run ln <- import_module(\"lamindb\") ln$track() ln$finish()  # lamin load https://lamin.ai/laminlabs/lamindata/transform/13VINnFk89PE0004"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"curate-datasets","dir":"Articles","previous_headings":"Key use cases","what":"Curate datasets","title":"Introduction","text":"See https://docs.lamin.ai/introduction#curate-datasets.","code":"perturbation_type <- ln$ULabel(name = \"Perturbation\", is_type = TRUE)$save() ln$ULabel(name = \"DMSO\", type = perturbation_type)$save() #> ULabel(uid='qrL1eNzC', name='DMSO', is_type=False, space_id=1, created_by_id=1, run_id=1, type_id=3, created_at=2025-04-22 07:53:28 UTC) ln$ULabel(name = \"IFNG\", type = perturbation_type)$save() #> ULabel(uid='WqwumOvg', name='IFNG', is_type=False, space_id=1, created_by_id=1, run_id=1, type_id=3, created_at=2025-04-22 07:53:28 UTC)  # Load Python built ins to get access to dtypes py_builtins <- reticulate::import_builtins()  schema <- ln$Schema(   name = \"My DataFrame schema\",   features = list(     # NOTE: These have dtype=int in the original guide     ln$Feature(name = \"ENSG00000153563\", dtype = py_builtins$float)$save(),     ln$Feature(name = \"ENSG00000010610\", dtype = py_builtins$float)$save(),     ln$Feature(name = \"ENSG00000170458\", dtype = py_builtins$float)$save(),     ln$Feature(name = \"perturbation\", dtype = ln$ULabel)$save()   ) )$save()  curator <- ln$curators$DataFrameCurator(df, schema) artifact <- curator$save_artifact(key = \"my_curated_dataset.parquet\") #> → returning existing artifact with same hash: Artifact(uid='WONCrVTVMlyqjrUE0001', is_latest=True, key='my_datasets/rnaseq1.parquet', suffix='.parquet', kind='dataset', otype='DataFrame', size=8530, hash='RVElCjRCfyOAxbLNDEAMOg', n_observations=3, space_id=1, storage_id=1, run_id=1, created_by_id=1, created_at=2025-04-22 07:53:12 UTC); to track this artifact as an input, use: ln.Artifact.get() #> ! key my_datasets/rnaseq1.parquet on existing artifact differs from passed key my_curated_dataset.parquet #> ! 7 unique terms (63.60%) are not validated for name: 'sample_note', 'cell_type_by_expert', 'cell_type_by_model', 'assay_oid', 'concentration', 'treatment_time_h', 'donor' #> → returning existing schema with same hash: Schema(uid='jwG1V4a8qkx5tZqeR0IZ', name='My DataFrame schema', n=4, itype='Feature', is_type=False, hash='-3Vm5NimLlWcEvRZdOjv4Q', minimal_set=True, ordered_set=False, maximal_set=False, space_id=1, created_by_id=1, run_id=1, created_at=2025-04-22 07:53:28 UTC) artifact$describe() #> Artifact .parquet/DataFrame #> ├── General #> │   ├── .uid = 'WONCrVTVMlyqjrUE0001' #> │   ├── .key = 'my_datasets/rnaseq1.parquet' #> │   ├── .size = 8530 #> │   ├── .hash = 'RVElCjRCfyOAxbLNDEAMOg' #> │   ├── .n_observations = 3 #> │   ├── .path =  #> │   │   /tmp/RtmpEVJ0jl/laminr-intro-20250422075248/.lamindb/WONCrVTVMlyqjrUE000 #> │   │   1.parquet #> │   ├── .created_by = testuser1 (Test User1) #> │   ├── .created_at = 2025-04-22 07:53:12 #> │   └── .transform = 'introduction.Rmd' #> ├── Dataset features #> │   └── columns • 4         [Feature]                                            #> │       perturbation        cat[ULabel]        DMSO, IFNG                        #> │       ENSG00000153563     float                                                #> │       ENSG00000010610     float                                                #> │       ENSG00000170458     float                                                #> ├── Linked features #> │   └── experiment          cat[ULabel]        Candidate marker experiment       #> │       temperature         float              21.6                              #> └── Labels #>     └── .cell_types         bionty.CellType    effector T cell                   #>         .ulabels            ULabel             Candidate marker experiment, DMS… ln$Artifact$get(ulabels__name = \"IFNG\") #> Artifact(uid='WONCrVTVMlyqjrUE0001', is_latest=True, key='my_datasets/rnaseq1.parquet', suffix='.parquet', kind='dataset', otype='DataFrame', size=8530, hash='RVElCjRCfyOAxbLNDEAMOg', n_observations=3, space_id=1, storage_id=1, run_id=1, schema_id=1, created_by_id=1, created_at=2025-04-22 07:53:12 UTC)  curator <- ln$curators$DataFrameCurator(df_typo, schema) tryCatch(   curator$validate(),   error = function(err) {     cat(conditionMessage(err))   } ) #> !   1 term is not validated: 'IFNJ' #>     → fix typos, remove non-existent values, or save terms via .add_new_from(\"perturbation\") #> lamindb.errors.ValidationError #> Run `reticulate::py_last_error()` for details."},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"manage-biological-registries","dir":"Articles","previous_headings":"Key use cases","what":"Manage biological registries","title":"Introduction","text":"See https://docs.lamin.ai/introduction#manage-biological-registries.","code":"cell_types <- bt$CellType$public() cell_types #> PublicOntology #> Entity: CellType #> Organism: all #> Source: cl, 2024-08-16 #> #terms: 2959 cell_types$search(\"gamma-delta T cell\") |> head(2) #>                                  name #> CL:0000798         gamma-delta T cell #> CL:4033072 cycling gamma-delta T cell #>                                                                definition #> CL:0000798 A T Cell That Expresses A Gamma-Delta T Cell Receptor Complex. #> CL:4033072                       A(N) Gamma-Delta T Cell That Is Cycling. #>                                                                                          synonyms #> CL:0000798 gamma-delta T-cell|gamma-delta T lymphocyte|gammadelta T cell|gamma-delta T-lymphocyte #> CL:4033072                                                       proliferating gamma-delta T cell #>                           parents #> CL:0000798             CL:0000084 #> CL:4033072 CL:4033069, CL:0000798  var_schema <- ln$Schema(   name = \"my_var_schema\",   itype = bt$Gene$ensembl_gene_id,   dtype = py_builtins$float )$save() obs_schema <- ln$Schema(   name = \"my_obs_schema\",   features = list(     ln$Feature(name = \"perturbation\", dtype = ln$ULabel)$save()   ) )$save() #> → returning existing Feature record with same name: 'perturbation' anndata_schema <- ln$Schema(   name = \"my_anndata_schema\",   otype = \"AnnData\",   components = list(\"obs\" = obs_schema, \"var\" = var_schema) )$save()  library(anndata) adata <- AnnData(   df[c(\"ENSG00000153563\", \"ENSG00000010610\", \"ENSG00000170458\")],   obs = df[, \"perturbation\", drop = FALSE] ) curator <- ln$curators$AnnDataCurator(adata, anndata_schema) artifact <- curator$save_artifact(description = \"my RNA-seq\") #> ... synchronizing ensembl_prefix.parquet:  0.0%... synchronizing ensembl_prefix.parquet: 41.8%... synchronizing ensembl_prefix.parquet: 100.0% #> ... synchronizing df_vertebrates__ensembl__release-112__Organism.parquet:  0.0%... synchronizing df_vertebrates__ensembl__release-112__Organism.parquet: 43.5%... synchronizing df_vertebrates__ensembl__release-112__Organism.parquet: 100.0% #> ... synchronizing df_human__ensembl__release-112__Gene.parquet:  0.0%... synchronizing df_human__ensembl__release-112__Gene.parquet:  0.6%... synchronizing df_human__ensembl__release-112__Gene.parquet:  3.2%... synchronizing df_human__ensembl__release-112__Gene.parquet:  4.1%... synchronizing df_human__ensembl__release-112__Gene.parquet:  6.6%... synchronizing df_human__ensembl__release-112__Gene.parquet:  9.2%... synchronizing df_human__ensembl__release-112__Gene.parquet: 11.8%... synchronizing df_human__ensembl__release-112__Gene.parquet: 14.3%... synchronizing df_human__ensembl__release-112__Gene.parquet: 16.9%... synchronizing df_human__ensembl__release-112__Gene.parquet: 19.4%... synchronizing df_human__ensembl__release-112__Gene.parquet: 22.0%... synchronizing df_human__ensembl__release-112__Gene.parquet: 24.5%... synchronizing df_human__ensembl__release-112__Gene.parquet: 27.1%... synchronizing df_human__ensembl__release-112__Gene.parquet: 29.7%... synchronizing df_human__ensembl__release-112__Gene.parquet: 32.2%... synchronizing df_human__ensembl__release-112__Gene.parquet: 34.8%... synchronizing df_human__ensembl__release-112__Gene.parquet: 37.3%... synchronizing df_human__ensembl__release-112__Gene.parquet: 39.9%... synchronizing df_human__ensembl__release-112__Gene.parquet: 42.5%... synchronizing df_human__ensembl__release-112__Gene.parquet: 45.0%... synchronizing df_human__ensembl__release-112__Gene.parquet: 47.5%... synchronizing df_human__ensembl__release-112__Gene.parquet: 50.1%... synchronizing df_human__ensembl__release-112__Gene.parquet: 52.7%... synchronizing df_human__ensembl__release-112__Gene.parquet: 55.2%... synchronizing df_human__ensembl__release-112__Gene.parquet: 57.8%... synchronizing df_human__ensembl__release-112__Gene.parquet: 60.3%... synchronizing df_human__ensembl__release-112__Gene.parquet: 62.9%... synchronizing df_human__ensembl__release-112__Gene.parquet: 65.4%... synchronizing df_human__ensembl__release-112__Gene.parquet: 68.0%... synchronizing df_human__ensembl__release-112__Gene.parquet: 70.6%... synchronizing df_human__ensembl__release-112__Gene.parquet: 73.1%... synchronizing df_human__ensembl__release-112__Gene.parquet: 75.7%... synchronizing df_human__ensembl__release-112__Gene.parquet: 78.2%... synchronizing df_human__ensembl__release-112__Gene.parquet: 80.8%... synchronizing df_human__ensembl__release-112__Gene.parquet: 83.4%... synchronizing df_human__ensembl__release-112__Gene.parquet: 85.9%... synchronizing df_human__ensembl__release-112__Gene.parquet: 88.4%... synchronizing df_human__ensembl__release-112__Gene.parquet: 91.0%... synchronizing df_human__ensembl__release-112__Gene.parquet: 93.6%... synchronizing df_human__ensembl__release-112__Gene.parquet: 96.1%... synchronizing df_human__ensembl__release-112__Gene.parquet: 98.7%... synchronizing df_human__ensembl__release-112__Gene.parquet: 100.0% #> → returning existing schema with same hash: Schema(uid='tlbboWIzbW5gefUMMfCc', name='my_obs_schema', n=1, itype='Feature', is_type=False, hash='t0jInLEph45HBV5r80Tidg', minimal_set=True, ordered_set=False, maximal_set=False, space_id=1, created_by_id=1, run_id=1, created_at=2025-04-22 07:53:30 UTC) artifact$describe() #> Artifact .h5ad/AnnData #> ├── General #> │   ├── .uid = '0r4p7FhnRGCjLTeY0000' #> │   ├── .size = 19240 #> │   ├── .hash = 'gO44MDqttaaKNyBLVM-zzA' #> │   ├── .n_observations = 3 #> │   ├── .path =  #> │   │   /tmp/RtmpEVJ0jl/laminr-intro-20250422075248/.lamindb/0r4p7FhnRGCjLTeY000 #> │   │   0.h5ad #> │   ├── .created_by = testuser1 (Test User1) #> │   ├── .created_at = 2025-04-22 07:55:07 #> │   └── .transform = 'introduction.Rmd' #> ├── Dataset features #> │   ├── var • 3             [bionty.Gene]                                        #> │   │   CD8A                float                                                #> │   │   CD4                 float                                                #> │   │   CD14                float                                                #> │   └── obs • 1             [Feature]                                            #> │       perturbation        cat[ULabel]        DMSO, IFNG                        #> └── Labels #>     └── .ulabels            ULabel             DMSO, IFNG  genes <- bt$Gene$filter(organism__name = \"human\")$lookup() feature_sets <- ln$FeatureSet$filter(genes = genes$cd8a)$all() ln$Artifact$filter(feature_sets__in = feature_sets)$df() #>                    uid  key description suffix    kind   otype  size #> 3 0r4p7FhnRGCjLTeY0000 <NA>  my RNA-seq  .h5ad dataset AnnData 19240 #>                     hash n_files n_observations _hash_type _key_is_virtual #> 3 gO44MDqttaaKNyBLVM-zzA    <NA>              3        md5            TRUE #>   _overwrite_versions space_id storage_id schema_id version is_latest run_id #> 3               FALSE        1          1         4    <NA>      TRUE      1 #>            created_at created_by_id _aux _branch_code #> 3 2025-04-22 07:55:07             1 <NA>            1  neuron <- bt$CellType$from_source(name = \"neuron\")$save() new_cell_state <- bt$CellType(   name = \"my neuron cell state\", description = \"explains X\" )$save() new_cell_state$parents$add(neuron) new_cell_state$view_parents(distance = 2) #> ✗ please install the graphviz executable on your system: #>   - Ubuntu: `sudo apt-get install graphviz` #>   - Windows: https://graphviz.org/download/#windows #>   - Mac: `brew install graphviz`"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"scale-learning","dir":"Articles","previous_headings":"Key use cases","what":"Scale learning","title":"Introduction","text":"See https://docs.lamin.ai/introduction#scale-learning.","code":"df2 <- ln$core$datasets$small_dataset2(otype = \"DataFrame\") adata <- AnnData(   df2[c(\"ENSG00000153563\", \"ENSG00000010610\", \"ENSG00000004468\")],   obs = df2[, \"perturbation\", drop = FALSE] ) curator <- ln$curators$AnnDataCurator(adata, anndata_schema) artifact2 <- curator$save_artifact(key = \"my_datasets/my_rnaseq2.h5ad\") #> → returning existing schema with same hash: Schema(uid='tlbboWIzbW5gefUMMfCc', name='my_obs_schema', n=1, itype='Feature', is_type=False, hash='t0jInLEph45HBV5r80Tidg', minimal_set=True, ordered_set=False, maximal_set=False, space_id=1, created_by_id=1, run_id=1, created_at=2025-04-22 07:53:30 UTC)  collection <- ln$Collection(   list(artifact, artifact2),   key = \"my-RNA-seq-collection\" )$save() collection$describe() #> Collection  #> └── General #>     ├── .uid = '9C7Be5bjifJ6CKDE0000' #>     ├── .key = 'my-RNA-seq-collection' #>     ├── .hash = 'DbgO9hDdS-KOydwDZDLp3g' #>     ├── .created_by = testuser1 (Test User1) #>     ├── .created_at = 2025-04-22 07:55:11 #>     └── .transform = 'introduction.Rmd' collection$view_lineage() #> ✖ `view_lineage()` is not yet implemented. Please view the lineage in the web interface.  collection$load() #> AnnData object with n_obs × n_vars = 6 × 4 #>     obs: 'perturbation', 'artifact_uid' collection$artifacts$all() #> <QuerySet [Artifact(uid='0r4p7FhnRGCjLTeY0000', is_latest=True, description='my RNA-seq', suffix='.h5ad', kind='dataset', otype='AnnData', size=19240, hash='gO44MDqttaaKNyBLVM-zzA', n_observations=3, space_id=1, storage_id=1, run_id=1, schema_id=4, created_by_id=1, created_at=2025-04-22 07:55:07 UTC), Artifact(uid='hiLY2xe2IN0G9kwz0000', is_latest=True, key='my_datasets/my_rnaseq2.h5ad', suffix='.h5ad', kind='dataset', otype='AnnData', size=19240, hash='Ti7bcnIOlk0fIt2TFW_VAw', n_observations=3, space_id=1, storage_id=1, run_id=1, schema_id=4, created_by_id=1, created_at=2025-04-22 07:55:10 UTC)]> collection$artifacts$df() #>                    uid                         key description suffix    kind #> 3 0r4p7FhnRGCjLTeY0000                        <NA>  my RNA-seq  .h5ad dataset #> 4 hiLY2xe2IN0G9kwz0000 my_datasets/my_rnaseq2.h5ad        <NA>  .h5ad dataset #>     otype  size                   hash n_files n_observations _hash_type #> 3 AnnData 19240 gO44MDqttaaKNyBLVM-zzA    <NA>              3        md5 #> 4 AnnData 19240 Ti7bcnIOlk0fIt2TFW_VAw    <NA>              3        md5 #>   _key_is_virtual _overwrite_versions space_id storage_id schema_id version #> 3            TRUE               FALSE        1          1         4    <NA> #> 4            TRUE               FALSE        1          1         4    <NA> #>   is_latest run_id          created_at created_by_id _aux _branch_code #> 3      TRUE      1 2025-04-22 07:55:07             1 <NA>            1 #> 4      TRUE      1 2025-04-22 07:55:10             1 <NA>            1"},{"path":[]},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"slice-a-tiledb-soma-array-store","dir":"Articles","previous_headings":"Other examples","what":"Slice a TileDB-SOMA array store","title":"Introduction","text":"artifacts contain TileDB-SOMA array stores can opened sliced using {tiledbsoma} package.","code":"# Set some environment variables to avoid an issue with {tiledbsoma} # https://github.com/chanzuckerberg/cellxgene-census/issues/1261 Sys.setenv(TILEDB_VFS_S3_REGION = \"us-west-2\") Sys.setenv(AWS_DEFAULT_REGION = \"us-west-2\") Sys.setenv(TILEDB_VFS_S3_NO_SIGN_REQUEST = \"true\")  # Define a filter to select specific cells value_filter <- paste(   \"tissue == 'brain' &&\",   \"cell_type %in% c('microglial cell', 'neuron') &&\",   \"suspension_type == 'cell' &&\",   \"assay == '10x 3\\\\' v3'\" )  # Get the artifact containing the CELLxGENE Census TileDB-SOMA store census_artifact <- ln$Artifact$using(\"laminlabs/cellxgene\")$get(\"FYMewVq5twKMDXVy0001\") #> ! source modules has additional modules: set() #> consider mounting these registry modules to transfer all metadata #> ! source modules has additional modules: set() #> consider mounting these registry modules to transfer all metadata #> ! source modules has additional modules: set() #> consider mounting these registry modules to transfer all metadata #> ! source modules has additional modules: set() #> consider mounting these registry modules to transfer all metadata #> ! source modules has additional modules: set() #> consider mounting these registry modules to transfer all metadata #> ! source modules has additional modules: set() #> consider mounting these registry modules to transfer all metadata #> ! source modules has additional modules: set() #> consider mounting these registry modules to transfer all metadata # Open the SOMACollection soma_collection <- census_artifact$open() #> ! source modules has additional modules: set() #> consider mounting these registry modules to transfer all metadata #> → completing transfer to track Artifact('FYMewVq5') as input #> → mapped records:  #> → transferred records: Artifact(uid='FYMewVq5twKMDXVy0001'), Storage(uid='oIYGbD74') # Slice the store to get a SOMADataFrame containing metadata for the cells of interest cell_metadata <- soma_collection$get(\"census_data\")$get(\"homo_sapiens\")$obs$read(value_filter = value_filter) # Concatenate the results to an arrow::Table cell_metadata <- cell_metadata$concat() # Convert to a data.frame cell_metadata <- cell_metadata$to_data_frame()  cell_metadata #> # A tibble: 66,418 × 28 #>    soma_joinid dataset_id                 assay assay_ontology_term_id cell_type #>          <int> <fct>                      <fct> <fct>                  <fct>     #>  1    48182177 c888b684-6c51-431f-972a-6… 10x … EFO:0009922            microgli… #>  2    48182178 c888b684-6c51-431f-972a-6… 10x … EFO:0009922            microgli… #>  3    48182185 c888b684-6c51-431f-972a-6… 10x … EFO:0009922            microgli… #>  4    48182187 c888b684-6c51-431f-972a-6… 10x … EFO:0009922            microgli… #>  5    48182188 c888b684-6c51-431f-972a-6… 10x … EFO:0009922            microgli… #>  6    48182189 c888b684-6c51-431f-972a-6… 10x … EFO:0009922            microgli… #>  7    48182190 c888b684-6c51-431f-972a-6… 10x … EFO:0009922            microgli… #>  8    48182191 c888b684-6c51-431f-972a-6… 10x … EFO:0009922            microgli… #>  9    48182192 c888b684-6c51-431f-972a-6… 10x … EFO:0009922            microgli… #> 10    48182194 c888b684-6c51-431f-972a-6… 10x … EFO:0009922            microgli… #> # ℹ 66,408 more rows #> # ℹ 23 more variables: cell_type_ontology_term_id <fct>, #> #   development_stage <fct>, development_stage_ontology_term_id <fct>, #> #   disease <fct>, disease_ontology_term_id <fct>, donor_id <fct>, #> #   is_primary_data <lgl>, observation_joinid <chr>, #> #   self_reported_ethnicity <fct>, #> #   self_reported_ethnicity_ontology_term_id <fct>, sex <fct>, …"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"finish-tracking","dir":"Articles","previous_headings":"","what":"Finish tracking","title":"Introduction","text":"Mark analysis run finished create time stamp upload source code hub.","code":"ln$finish() #> ℹ Creating lockfile /home/runner/.cache/lamindb/environments/run_Eo3PL2trrsrpG9… #>  #> ✔ Updated metadata database: 2.37 MB in 4 files. #>  #> ℹ Creating lockfile /home/runner/.cache/lamindb/environments/run_Eo3PL2trrsrpG9…ℹ source packages are missing from RSPM: Could not resolve host: RSPM #> ℹ Creating lockfile /home/runner/.cache/lamindb/environments/run_Eo3PL2trrsrpG9…ℹ Updating metadata database #> ✔ Updating metadata database ... done #>  #> ℹ Creating lockfile /home/runner/.cache/lamindb/environments/run_Eo3PL2trrsrpG9…✔ Created lockfile /home/runner/.cache/lamindb/environments/run_Eo3PL2trrsrpG9a… #> ! no html report found; to attach one, create an .html export for your .Rmd file and then run: lamin save introduction.Rmd #> → finished Run('Eo3PL2tr') after 2m at 2025-04-22 07:55:56 UTC"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"save-a-notebook-report-not-needed-for--r-scripts","dir":"Articles","previous_headings":"Finish tracking","what":"Save a notebook report (not needed for .R scripts)","title":"Introduction","text":"Save run report notebook (.Rmd .qmd file) instance: Render notebook HTML RStudio, click “Knit” button command line, run: Use rmarkdown package R: Save LaminDB instance: Using lamin_save() function R: Using lamin CLI:","code":"Rscript -e 'rmarkdown::render(\"introduction.Rmd\")' rmarkdown::render(\"introduction.Rmd\") lamin_save(\"introduction.Rmd\") lamin save introduction.Rmd"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"design","dir":"Articles","previous_headings":"","what":"Design","title":"Introduction","text":"See https://docs.lamin.ai/introduction#design information design LaminDB.","code":""},{"path":[]},{"path":[]},{"path":"https://laminr.lamin.ai/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robrecht Cannoodt. Author, maintainer. Luke Zappia. Author. Data Intuitive. Author. Lamin Labs. Author, copyright holder.","code":""},{"path":"https://laminr.lamin.ai/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cannoodt R, Zappia L, Data Intuitive, Lamin Labs (2025). laminr: Client 'LaminDB'. R package version 1.0.1.9000, https://laminr.lamin.ai.","code":"@Manual{,   title = {laminr: Client for 'LaminDB'},   author = {Robrecht Cannoodt and Luke Zappia and {Data Intuitive} and {Lamin Labs}},   year = {2025},   note = {R package version 1.0.1.9000},   url = {https://laminr.lamin.ai}, }"},{"path":"https://laminr.lamin.ai/index.html","id":"laminr-an-r-client-for-lamindb","dir":"","previous_headings":"","what":"Client for LaminDB","title":"Client for LaminDB","text":"documentation development version {laminr}. release documentation, please go docs.lamin.ai/.","code":""},{"path":"https://laminr.lamin.ai/reference/get_current_lamin_instance.html","id":null,"dir":"Reference","previous_headings":"","what":"Get current LaminDB instance — get_current_lamin_instance","title":"Get current LaminDB instance — get_current_lamin_instance","text":"Get currently connected LaminDB instance","code":""},{"path":"https://laminr.lamin.ai/reference/get_current_lamin_instance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get current LaminDB instance — get_current_lamin_instance","text":"","code":"get_current_lamin_instance()"},{"path":"https://laminr.lamin.ai/reference/get_current_lamin_instance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get current LaminDB instance — get_current_lamin_instance","text":"slug current LaminDB instance, NULL invisibly instance found","code":""},{"path":"https://laminr.lamin.ai/reference/get_current_lamin_instance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get current LaminDB instance — get_current_lamin_instance","text":"done via system call lamin settings avoid importing Python lamindb","code":""},{"path":"https://laminr.lamin.ai/reference/get_current_lamin_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Get current LaminDB user — get_current_lamin_user","title":"Get current LaminDB user — get_current_lamin_user","text":"Get currently logged LaminDB user","code":""},{"path":"https://laminr.lamin.ai/reference/get_current_lamin_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get current LaminDB user — get_current_lamin_user","text":"","code":"get_current_lamin_user()"},{"path":"https://laminr.lamin.ai/reference/get_current_lamin_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get current LaminDB user — get_current_lamin_user","text":"handle current LaminDB user, NULL invisibly user found","code":""},{"path":"https://laminr.lamin.ai/reference/get_current_lamin_user.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get current LaminDB user — get_current_lamin_user","text":"done via system call lamin settings avoid importing Python lamindb","code":""},{"path":"https://laminr.lamin.ai/reference/import_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Python modules — import_module","title":"Import Python modules — import_module","text":"function can used import LaminDB Python modules additional checks nicer error messages.","code":""},{"path":"https://laminr.lamin.ai/reference/import_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Python modules — import_module","text":"","code":"import_module(module, ...)"},{"path":"https://laminr.lamin.ai/reference/import_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Python modules — import_module","text":"module name Python module import ... Arguments passed require_module options vector defined optional dependencies module required version string specifying version module require source source module requirement, example git+https://github.com/owner/module.git python_version string defining Python version require. Passed reticulate::py_require()","code":""},{"path":"https://laminr.lamin.ai/reference/import_module.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Python modules — import_module","text":"object representing Python package","code":""},{"path":"https://laminr.lamin.ai/reference/import_module.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import Python modules — import_module","text":"Python dependencies set using require_module() importing module used create ephemeral environment unless another environment found (see vignette(\"versions\", package = \"reticulate\")).","code":""},{"path":[]},{"path":"https://laminr.lamin.ai/reference/import_module.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Python modules — import_module","text":"","code":"if (FALSE) { # \\dontrun{ # Import lamindb to start interacting with an instance ln <- import_module(\"lamindb\")  # Import lamindb with optional dependencies ln <- import_module(\"lamindb\", options = c(\"bionty\", \"wetlab\"))  # Import other LaminDB modules bt <- import_module(\"bionty\") wl <- import_module(\"wetlab\") cc <- import_module(\"clinicore\")  # Import any Python module np <- import_module(\"numpy\") } # }"},{"path":"https://laminr.lamin.ai/reference/install_lamindb.html","id":null,"dir":"Reference","previous_headings":"","what":"Install LaminDB — install_lamindb","title":"Install LaminDB — install_lamindb","text":"function deprecated replaced system automatically installs packages needed. See import_module(), require_module() reticulate::py_require() details. Create Python environment containing lamindb install lamindb existing environment.","code":""},{"path":"https://laminr.lamin.ai/reference/install_lamindb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install LaminDB — install_lamindb","text":"","code":"install_lamindb(   ...,   envname = \"r-lamindb\",   extra_packages = NULL,   new_env = identical(envname, \"r-lamindb\"),   use = TRUE )"},{"path":"https://laminr.lamin.ai/reference/install_lamindb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install LaminDB — install_lamindb","text":"... Additional arguments passed reticulate::py_install() envname String giving name environment install packages extra_packages vector giving names additional Python packages install new_env Whether remove existing virtualenv name creating new one requested packages use Whether attempt use new environment","code":""},{"path":"https://laminr.lamin.ai/reference/install_lamindb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install LaminDB — install_lamindb","text":"NULL, invisibly","code":""},{"path":"https://laminr.lamin.ai/reference/install_lamindb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install LaminDB — install_lamindb","text":"","code":"if (FALSE) { # \\dontrun{ # Using import_module() will automatically install packages ln <- import_module(\"lamindb\")  # Create a Python environment with lamindb # This approach is deprecated install_lamindb()  # Add additional packages to the environment install_lamindb(extra_packages = c(\"bionty\", \"wetlab\"))  # Install into a different environment install_lamindb(envvname = \"your-env\") } # }"},{"path":"https://laminr.lamin.ai/reference/lamin_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to a LaminDB instance — lamin_connect","title":"Connect to a LaminDB instance — lamin_connect","text":"Connect LaminDB instance calling lamin connect command line","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to a LaminDB instance — lamin_connect","text":"","code":"lamin_connect(instance)"},{"path":"https://laminr.lamin.ai/reference/lamin_connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to a LaminDB instance — lamin_connect","text":"instance Either slug giving instance connect (<owner>/<name>) instance URL (https://lamin.ai/owner/name)","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_connect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to a LaminDB instance — lamin_connect","text":"Running set LaminDB auto-connect option True auto-connect instance importing Python lamindb.","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_connect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to a LaminDB instance — lamin_connect","text":"","code":"if (FALSE) { # \\dontrun{ lamin_connect(\"laminlabs/cellxgene\") } # }"},{"path":"https://laminr.lamin.ai/reference/lamin_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"LaminDB delete — lamin_delete","title":"LaminDB delete — lamin_delete","text":"Delete LaminDB entity. Currently supports instances.","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LaminDB delete — lamin_delete","text":"","code":"lamin_delete(instance, force = FALSE)"},{"path":"https://laminr.lamin.ai/reference/lamin_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LaminDB delete — lamin_delete","text":"instance Identifier instance delete (e.g. \"owner/name\") force Whether force deletion without asking confirmation","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_delete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LaminDB delete — lamin_delete","text":"","code":"if (FALSE) { # \\dontrun{ lamin_init(\"to-delete\") lamin_delete(\"to-delete\") } # }"},{"path":"https://laminr.lamin.ai/reference/lamin_disconnect.html","id":null,"dir":"Reference","previous_headings":"","what":"Disconnect from a LaminDB instance — lamin_disconnect","title":"Disconnect from a LaminDB instance — lamin_disconnect","text":"Disconnect current LaminDB instance calling lamin connect command line","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_disconnect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disconnect from a LaminDB instance — lamin_disconnect","text":"","code":"lamin_disconnect()"},{"path":"https://laminr.lamin.ai/reference/lamin_disconnect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disconnect from a LaminDB instance — lamin_disconnect","text":"","code":"if (FALSE) { # \\dontrun{ lamin_disconnect() } # }"},{"path":"https://laminr.lamin.ai/reference/lamin_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialise LaminDB — lamin_init","title":"Initialise LaminDB — lamin_init","text":"Initialise new LaminDB instance","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialise LaminDB — lamin_init","text":"","code":"lamin_init(storage, name = NULL, db = NULL, modules = NULL)  lamin_init_temp(   name = \"laminr-temp\",   db = NULL,   modules = NULL,   add_timestamp = TRUE,   envir = parent.frame() )"},{"path":"https://laminr.lamin.ai/reference/lamin_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialise LaminDB — lamin_init","text":"storage local directory, AWS S3 bucket Google Cloud Storage bucket name name instance db Postgres database connection URL, use NULL SQLite. modules vector modules include (e.g. \"bionty\") add_timestamp Whether append timestamp name make unique envir environment passed withr::defer()","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_init.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialise LaminDB — lamin_init","text":"lamin_init_temp(), time stamp appended name (add_timestamp = TRUE) new instance initialised lamin_init() using temporary directory. lamin_delete() call registered exit handler withr::defer() clean instance envir finishes. lamin_init_temp() function mostly internal use cases users want lamin_init().","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialise LaminDB — lamin_init","text":"","code":"if (FALSE) { # \\dontrun{ lamin_init(\"mydata\", modules = c(\"bionty\", \"wetlab\")) } # }"},{"path":"https://laminr.lamin.ai/reference/lamin_login.html","id":null,"dir":"Reference","previous_headings":"","what":"Log into LaminDB — lamin_login","title":"Log into LaminDB — lamin_login","text":"Log LaminDB user","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_login.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log into LaminDB — lamin_login","text":"","code":"lamin_login(user = NULL, api_key = NULL)"},{"path":"https://laminr.lamin.ai/reference/lamin_login.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log into LaminDB — lamin_login","text":"user Handle user login api_key API key user","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_login.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log into LaminDB — lamin_login","text":"Depending input, one commands run (order): user set lamin login <user> Else api_key set set LAMIN_API_KEY environment variable temporarily withr::with_envvar() run lamin login Else stored user handle run lamin login <handle> Else LAMIN_API_KEY environment variable set run lamin login Otherwise, exit error","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_logout.html","id":null,"dir":"Reference","previous_headings":"","what":"Log out of LaminDB — lamin_logout","title":"Log out of LaminDB — lamin_logout","text":"Log LaminDB","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_logout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log out of LaminDB — lamin_logout","text":"","code":"lamin_logout()"},{"path":"https://laminr.lamin.ai/reference/lamin_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save to a LaminDB instance — lamin_save","title":"Save to a LaminDB instance — lamin_save","text":"Save file folder LaminDB instance calling lamin save command line","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save to a LaminDB instance — lamin_save","text":"","code":"lamin_save(filepath, key = NULL, description = NULL, registry = NULL)"},{"path":"https://laminr.lamin.ai/reference/lamin_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save to a LaminDB instance — lamin_save","text":"filepath Path file folder save key key saved item description description saved item registry registry saved item","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_save.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save to a LaminDB instance — lamin_save","text":"See lamin save --help details database entries created different file types","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_save.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save to a LaminDB instance — lamin_save","text":"","code":"if (FALSE) { # \\dontrun{ my_file <- tempfile() lamin_save(my_file) } # }"},{"path":"https://laminr.lamin.ai/reference/laminr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"laminr: Client for 'LaminDB' — laminr-package","title":"laminr: Client for 'LaminDB' — laminr-package","text":"Interact 'LaminDB'. 'LaminDB' open-source data framework biology. package allows query download data 'LaminDB' instances.","code":""},{"path":[]},{"path":"https://laminr.lamin.ai/reference/laminr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"laminr: Client for 'LaminDB' — laminr-package","text":"Maintainer: Robrecht Cannoodt robrecht@data-intuitive.com (ORCID) Authors: Luke Zappia luke@data-intuitive.com (ORCID) Data Intuitive info@data-intuitive.com Lamin Labs open-source@lamin.ai [copyright holder]","code":""},{"path":"https://laminr.lamin.ai/reference/require_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Require a Python module — require_module","title":"Require a Python module — require_module","text":"function can used require Python modules available laminr  additional checks nicer error messages.","code":""},{"path":"https://laminr.lamin.ai/reference/require_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Require a Python module — require_module","text":"","code":"require_module(   module,   options = NULL,   version = NULL,   source = NULL,   python_version = NULL )"},{"path":"https://laminr.lamin.ai/reference/require_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Require a Python module — require_module","text":"module name Python module require options vector defined optional dependencies module required version string specifying version module require source source module requirement, example git+https://github.com/owner/module.git python_version string defining Python version require. Passed reticulate::py_require()","code":""},{"path":"https://laminr.lamin.ai/reference/require_module.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Require a Python module — require_module","text":"result reticulate::py_require","code":""},{"path":"https://laminr.lamin.ai/reference/require_module.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Require a Python module — require_module","text":"Python dependencies set using reticulate::py_require(). connection Python already initialized requested module already list requirements call reticulate::py_require() made avoid errors/warnings. means required versions etc. need set Python initalized.","code":""},{"path":"https://laminr.lamin.ai/reference/require_module.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Require a Python module — require_module","text":"Setting options = c(\"opt1\", \"opt2\") results \"module[opt1,opt2]\" Setting version = \">=1.0.0\" results \"module>=1.0.0\" Setting source = \"my_source\" results \"module @ my_source\" Setting results \"module[opt1,opt2]>=1.0.0 @ my_source\"","code":""},{"path":[]},{"path":"https://laminr.lamin.ai/reference/require_module.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Require a Python module — require_module","text":"","code":"if (FALSE) { # \\dontrun{ # Require lamindb require_module(\"lamindb\")  # Require a specific version of lamindb require_module(\"lamindb\", version = \">=1.2\")  # Require require lamindb with options require_module(\"lamindb\", options = c(\"bionty\", \"wetlab\"))  # Require the development version of lamindb from GitHub require_module(\"lamindb\", source = \"git+https://github.com/laminlabs/lamindb.git\")  # Require lamindb with a specific Python version require_module(\"lamindb\", python_version = \"3.12\") } # }"}]
