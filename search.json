[{"path":[]},{"path":[]},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"new-features","dir":"","previous_headings":"","what":"NEW FEATURES","title":"Developement version","text":"Add lamin_settings() function displays information running lamin settings (PR #201) Add laminr_status() function returns laminr_status object information useful debugging. pretty print output. (PRs #201, #215) Add get_current_lamin_settings() function returns current LaminDB settings R list (PR #210, fixes #207) Add LAMINR_LAMINDB_VERSION LAMINR_LAMINDB_OPTIONS environment variables control version Python lamindb installed (PR #194, PR #218)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"major-changes","dir":"","previous_headings":"","what":"MAJOR CHANGES","title":"Developement version","text":"Isolate functions made CLI calls interfere main session/environment (PR #201) Require instance modules importing lamindb available (PR #201) Save simplified R environment file ln$finish() called instead {pak} lockfile (PR #213, related #195, #205)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"minor-changes","dir":"","previous_headings":"","what":"MINOR CHANGES","title":"Developement version","text":"Add alert instance module available importing lamindb (PR #201) Add status message require_module(), can suppressed silent = TRUE (PR #201) Add wrapping lamindb.models.sqlrecord.Registry class (PR #203) Remove {nanoparquet} suggested dependency, loading Parquet files now requires {arrow} (PR #203) Increase {reticulate} dependency >=1.41.0 make sure py_require() functionality available (PR #208) Add minimal requirement scipy>=1.7 avoid issue {reticulate} attempted failed install scipy==1.6 (PR #209, fixes #206) Disable Python ANSI colour codes RMarkdown documents (PR #217) Remove {Seurat} suggested dependency (PR #219, fixes #216) Add wrapping new Registry$from_dataframe() method (PR #221)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"bug-fixes","dir":"","previous_headings":"","what":"BUG FIXES","title":"Developement version","text":"Handle missing setting values lamin_settings() (PR #202) Handle list columns creating artifacts data frames (PR #203) Handle missing document context ID detecting current path tracking (PR #220)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"testing","dir":"","previous_headings":"","what":"TESTING","title":"Developement version","text":"Tidy reorganise test GitHub actions (PR #201)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"documentation","dir":"","previous_headings":"","what":"DOCUMENTATION","title":"Developement version","text":"Port updates introduction vignette main documentation site (PR #203) Use laminr::import_module(\"lamindb\") quickstart (PR #204)","code":""},{"path":[]},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"bug-fixes-1","dir":"","previous_headings":"","what":"BUG FIXES","title":"Developement version","text":"Surround pak lockfile creation try-catch avoid breaking finish process (PR #198)","code":""},{"path":[]},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"new-features-1","dir":"","previous_headings":"","what":"NEW FEATURES","title":"Developement version","text":"Add tracking R environment using {pak} lockfiles (PR #179) Allow setting object slots (PR #188) Enable view_lineage() functionality properly display lineage graphs (PR #180)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"minor-changes-1","dir":"","previous_headings":"","what":"MINOR CHANGES","title":"Developement version","text":"Update reticulate dependency >= 1.38.0 (PR #158) Use {rmarkdown} instead {quarto} articles (PR #159) Improve inheritance arguments wrapping overwriting Python functions (PR #191)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"bug-fixes-2","dir":"","previous_headings":"","what":"BUG FIXES","title":"Developement version","text":"Fix issue preventing lamin_connect() run multiple times instance (PR #176) Properly clear delete temporary instances created using lamin_init_temp() (PR #189)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"documentation-1","dir":"","previous_headings":"","what":"DOCUMENTATION","title":"Developement version","text":"Update feel structure documentation website (PR #159, PR #160, PR #161, PR #163, PR #172, PR #175) Update content introduction article match main documentation site (PR #188) Update welcome vignette point main LaminDB documentation website (PR #190)","code":""},{"path":[]},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"minor-changes-2","dir":"","previous_headings":"","what":"MINOR CHANGES","title":"Developement version","text":"Update dependencies fix CRAN issues (PR #156)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"laminr-v100","dir":"","previous_headings":"","what":"laminr v1.0.0","title":"Developement version","text":"LaminR now feature parity LaminDB (PR #146). Migration guide: Run install_lamindb(), ensure lamindb >= 1.2 Python environment used reticulate. Replace db <- connect() ln <- import_module(\"lamindb\") see table . ln object largely similar db object {laminr} < v1 matches lamindb’s Python API replacing . $. See updated “Get started” vignette information. User-facing changes: Add import_module() function import Python modules additional functionality, e.g., import_module(\"lamindb\") lamindb Add functions accessing lamin CLI commands Add new “Introduction” vignette replicates code Python lamindb introduction guide Internal changes: Add internal wrap_python() function wrap Python objects replacing Python methods R methods needed, leaving work {reticulate} Update internal check_requires() function handle Python packages Add custom cache()/load() methods Artifact class Add custom track()/finish() methods lamindb module","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"minor-changes-3","dir":"","previous_headings":"","what":"MINOR CHANGES","title":"Developement version","text":"Skip tests require Python CRAN (PR #153).","code":""},{"path":[]},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"minor-changes-4","dir":"","previous_headings":"","what":"MINOR CHANGES","title":"Developement version","text":"Bump R dependency >= 4.1.0 fix note CRAN (PR #142).","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"laminr-v040","dir":"","previous_headings":"","what":"laminr v0.4.0","title":"Developement version","text":"Minor (breaking) changes support Python lamindb v1.0 release.","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"breaking-changes-1","dir":"","previous_headings":"","what":"BREAKING CHANGES","title":"Developement version","text":"Updates compatibility Python lamindb v1.0 release (PR #136)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"minor-changes-5","dir":"","previous_headings":"","what":"MINOR CHANGES","title":"Developement version","text":"db$track() can now automatically create transform UID supplied (PR #136)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"laminr-v031","dir":"","previous_headings":"","what":"laminr v0.3.1","title":"Developement version","text":"release improves UX setting Python environment adds functions allow access CLI functionality R.","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"new-functionality","dir":"","previous_headings":"","what":"NEW FUNCTIONALITY","title":"Developement version","text":"Add install_lamindb() function help setting default Python environment (PR #129). Add lamin_login() lamin_connect() functions allow access CLI functionality R (PR #129).","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"documentation-2","dir":"","previous_headings":"","what":"DOCUMENTATION","title":"Developement version","text":"Add set vignette update documentation instructions set Python environment (PR #129).","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"laminr-v030","dir":"","previous_headings":"","what":"laminr v0.3.0","title":"Developement version","text":"release contains mostly UX improvements: Support interacting private LaminDB instances Support interacting TileDB-SOMA / CELLxGENE Census Improved UX tracking finishing runs","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"new-functionality-1","dir":"","previous_headings":"","what":"NEW FUNCTIONALITY","title":"Developement version","text":"Allow tracking artifacts loaded non-default instances (PR #124). Interact TileDB-SOMA stores (PR #117). Add open() method Artifact class connect TileDB-SOMA stores.","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"minor-changes-6","dir":"","previous_headings":"","what":"MINOR CHANGES","title":"Developement version","text":"Improve UX db$track() db$finish() (PR #120).","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"bug-fixes-3","dir":"","previous_headings":"","what":"BUG FIXES","title":"Developement version","text":"Allow connecting private LaminDB instances (PR #118). Fix error message fetching instance details fails (PR #123).","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"testing-1","dir":"","previous_headings":"","what":"TESTING","title":"Developement version","text":"Use host system user tests (PR #119)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"documentation-3","dir":"","previous_headings":"","what":"DOCUMENTATION","title":"Developement version","text":"Update laminr Getting Started vignette feedback demo (PR #113). Update roadmap (PR #112). Simplify README content (PR #116).","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"laminr-v020","dir":"","previous_headings":"","what":"laminr v0.2.0","title":"Developement version","text":"release adds support creating new artifacts LaminDB instance.","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"new-functionality-2","dir":"","previous_headings":"","what":"NEW FUNCTIONALITY","title":"Developement version","text":"Add support loaders (PR #81). Currently supported: .csv, .h5ad, .html, .jpg, .json, .parquet, .png, .rds, .svg, .tsv, .yaml. Add from_df() method Registry class create new artifacts data frames (PR #78) Create TemporaryRecord classes new artifacts saved database (PR #78) Add delete() method Record class (PR #78) Add track() finish() methods Instance class (PR #83) Add from_path() method Registry class create new artifacts paths (PR #85) Add from_anndata() method Registry class create new artifacts AnnData objects (PR #85) Add RStudio add-saving notebook (PR #90).","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"major-changes-1","dir":"","previous_headings":"","what":"MAJOR CHANGES","title":"Developement version","text":"Running connect(slug = NULL) now connects default instance allowed create records. default instance must changed using Lamin CLI. (PR #78) User setting stored global option first time connect() run (PR #78)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"minor-changes-7","dir":"","previous_headings":"","what":"MINOR CHANGES","title":"Developement version","text":"Adjusted argument order Instance$track() improved Python error handling (PR #89)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"testing-2","dir":"","previous_headings":"","what":"TESTING","title":"Developement version","text":"Add test creating artifacts data frames (PR #78). Add tests creating artifacts paths AnnData objects (PR #85)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"documentation-4","dir":"","previous_headings":"","what":"DOCUMENTATION","title":"Developement version","text":"Updated installation instructions {laminr} released CRAN (PR #74). Updated architecture vignette include new methods new TemporaryRecord class (PR #78, PR #83, PR #85) Updated development vignette new functionality (PR #78, PR #83, PR #85)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"laminr-v010","dir":"","previous_headings":"","what":"laminr v0.1.0","title":"Developement version","text":"First CRAN release LaminDB API client R. release focuses connecting LaminDB instance, fetching individual record instance, fetching related data record. Features: Connect LaminDB instance Auto-generate modules classes instance schema Fetch record Fetch record’s related data Fetch record summary table Cache S3 artifact Load AnnData artifact information, please visit package website.","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"new-functionality-3","dir":"","previous_headings":"","what":"NEW FUNCTIONALITY","title":"Developement version","text":"Query instance settings Lamin Hub (PR #8). Read user settings env file created lamin Python package (PR #2, PR #8). Add to_string() print() methods Record class (incomplete) describe() method Artifact() class (PR #22). Add to_string() print() methods remaining classes (PR #31) Add InstanceAPI$get_records() Registry$df() methods (PR #54) Add RelatedRecords class RelatedRecords$df() method (PR #59)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"major-changes-2","dir":"","previous_headings":"","what":"MAJOR CHANGES","title":"Developement version","text":"Refactored internal class data structures better modularity extensibility (PR #8). Added GitHub actions project (PR #11): Standard R-CMD-check workflow. Linting action. Commands roxygenizing (/document) restyling source code (/style). Allow unauthenticated users connect instance ran lamin connect <instance> beforehand (PR #19).","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"minor-changes-8","dir":"","previous_headings":"","what":"MINOR CHANGES","title":"Developement version","text":"complain foreign keys found record, also complain (PR #13). Define current user current instance lamin-cli prior testing generating documentation CI (PR #23). Add progress bars Artifact$cache() (PR #58) Remove link tables object print output (PR #55) Improve checking suggested packages provide installation instructions missing (PR #56) Add status code API error messages (PR #70) Adjust colours print output (PR #69) Modify Registry print output separate relational fields module (PR #71)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"testing-3","dir":"","previous_headings":"","what":"TESTING","title":"Developement version","text":"Add simple unit test queries laminlabs/lamindata (PR #27). Added unit test InstanceAPI class (PR #30). Add regular expression API test missing records (PR #70)","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"documentation-5","dir":"","previous_headings":"","what":"DOCUMENTATION","title":"Developement version","text":"Update README new set instructions simplify (PR #14). Add pkgdown website project (PR #13). simplify README, move detailed usage description separate vignette (PR #13). Generate vignettes using Quarto (PR #13). Add vignette showcase laminr usage (PR #18). Replace mentions lamin load lamin connect (PR #29). Improve README (PR #29). Set Python requirements lamindb[aws] now (PR #33). changed lamin_cli laminlabs/lamin-cli#90 solved. Improve documentation installing suggested dependencies required (PR #56). Update README give better overview package (PR #67). Rename usage vignette laminr added overview core concepts LaminDB (PR #67). Update architecture vignette relate class structure package core concepts (PR #67). Add development vignette document list current, planned unplanned functionality (PR #67). Add vignettes document registries core, bionty, wetlab modules (PR #67).","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"bug-fixes-4","dir":"","previous_headings":"","what":"BUG FIXES","title":"Developement version","text":"Fixed parsing env files ~/.lamin due changes lamindb-setup Python package (PR #12). Return NULL record’s related field empty (PR #28). Add alternative error message message returned API (PR #30). Handle error detail returned API list (PR #59) Manually install OpenBLAS macOS (PR #62). Switch Python 3.12 able install scipy macOS (PR #66).","code":""},{"path":"https://laminr.lamin.ai/CHANGELOG.html","id":"laminr-v001","dir":"","previous_headings":"","what":"laminr v0.0.1","title":"Developement version","text":"Initial POC implementation LaminDB API client R. Functionality: Connect LaminDB instance Fetch instance schema Auto-generate classes schema See available modules classes Get record Get record’s related data Cache S3 artifact Load AnnData artifact","code":""},{"path":"https://laminr.lamin.ai/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://laminr.lamin.ai/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://laminr.lamin.ai/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://laminr.lamin.ai/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://laminr.lamin.ai/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://laminr.lamin.ai/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://laminr.lamin.ai/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://laminr.lamin.ai/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://laminr.lamin.ai/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://laminr.lamin.ai/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://laminr.lamin.ai/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"quickstart","dir":"Articles","previous_headings":"","what":"Quickstart","title":"Introduction","text":"setup, install {laminr} lamindb packages connect LaminDB instance. ’s create local instance. R session, transfer scRNA-seq dataset laminlabs/cellxgene instance, compute marker genes Seurat, save results. use RStudio’s notebook mode, create html export run following.","code":"install.packages(\"laminr\", dependencies = TRUE)  # install the laminr package from CRAN laminr::install_lamindb(extra_packages = c(\"bionty\"))  # install lamindb & bionty for use via reticulate laminr::lamin_login()  # <-- you can skip this for local & self-hosted instances laminr::lamin_connect(\"<account>/<instance>\")  # <-- replace with your instance laminr::lamin_init(storage = \"./mydata\", modules = c(\"bionty\")) ln <- laminr::import_module(\"lamindb\")  # instantiate the central object of the API  # Access inputs -------------------------------------------  ln$track()  # track your run of a notebook or script artifact <- ln$Artifact$using(\"laminlabs/cellxgene\")$get(\"7dVluLROpalzEh8m\")  # query the artifact https://lamin.ai/laminlabs/cellxgene/artifact/7dVluLROpalzEh8m adata <- artifact$load()  # load the artifact into memory or sync to cache via filepath <- artifact$cache()  # Your transformation -------------------------------------  library(Seurat)  # find marker genes with Seurat seurat_obj <- CreateSeuratObject(counts = as(Matrix::t(adata$X), \"CsparseMatrix\"), meta.data = adata$obs) seurat_obj[[\"RNA\"]] <- AddMetaData(GetAssay(seurat_obj), adata$var) Idents(seurat_obj) <- \"cell_type\" seurat_obj <- NormalizeData(seurat_obj) markers <- FindAllMarkers(seurat_obj, features = Features(seurat_obj)[1:100]) seurat_path <- tempfile(fileext = \".rds\") saveRDS(seurat_obj, seurat_path)  # Save outputs --------------------------------------------  ln$Artifact(seurat_path, key = \"my-datasets/my-seurat-object.rds\")$save()  # save versioned output ln$Artifact$from_df(markers, key = \"my-datasets/my-markers.parquet\")$save()  # save versioned output ln$finish()  # finish the run, save source code & run report laminr::lamin_save(\"my-analyis.Rmd\")  # save source code and html report for a `.qmd` or `.Rmd` file"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"track-notebooks-scripts","dir":"Articles","previous_headings":"","what":"Track notebooks & scripts","title":"Introduction","text":"See https://docs.lamin.ai/introduction#track-notebooks-scripts","code":"library(laminr) lamin_init(storage = \"./laminr-intro\", modules = c(\"bionty\")) library(laminr) ln <- import_module(\"lamindb\")  # instantiate the central `ln` object of the API #> ℹ Requiring lamindb options \"bionty\" #> ℹ Requiring the development version of lamindb #> ℹ Requiring lamindb_setup[aws] @ git+https://github.com/laminlabs/lamindb.git#subdirectory=sub/lamindb-setup #> ℹ Requiring lamin_utils @ git+https://github.com/laminlabs/lamin-utils.git #> ℹ Requiring lamin_cli @ git+https://github.com/laminlabs/lamindb.git#subdirectory=sub/lamin-cli #> ℹ Requiring bionty @ git+https://github.com/laminlabs/lamindb.git#subdirectory=sub/bionty #> ℹ Requiring lamindb[bionty] @ git+https://github.com/laminlabs/lamindb.git #> ℹ Requiring bionty #> → connected lamindb: testuser1/laminr-intro-20250826070152  ln$track()  # track a run of your notebook or script #> → created Transform('LW2uVWhBFjUr0000'), started new Run('FHVRWxtB...') at 2025-08-26 07:02:25 UTC #> • recommendation: to identify the notebook across renames, pass the uid: ln$track(\"LW2uVWhBFjUr\")  ln$Transform$df() #>                uid              key      description     type source_code hash #> 1 LW2uVWhBFjUr0000 introduction.Rmd introduction.Rmd notebook        <NA> <NA> #>   reference reference_type space_id _template_id version is_latest #> 1      <NA>           <NA>        1         <NA>    <NA>      TRUE #>            created_at created_by_id _aux branch_id #> 1 2025-08-26 07:02:25             1 <NA>         1  ln$Run$df() #>                uid name          started_at finished_at reference #> 1 FHVRWxtBujoWkQOL <NA> 2025-08-26 07:02:25        <NA>      <NA> #>   reference_type _is_consecutive _status_code space_id transform_id report_id #> 1           <NA>            <NA>           -1        1            1      <NA> #>   _logfile_id environment_id initiated_by_run_id          created_at #> 1        <NA>           <NA>                <NA> 2025-08-26 07:02:25 #>   created_by_id _aux branch_id #> 1             1 <NA>         1"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"manage-artifacts","dir":"Articles","previous_headings":"","what":"Manage artifacts","title":"Introduction","text":"See https://docs.lamin.ai/introduction#manage-artifacts","code":""},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"create-an-artifact","dir":"Articles","previous_headings":"Manage artifacts","what":"Create an artifact","title":"Introduction","text":"See https://docs.lamin.ai/introduction#create--artifact","code":"df <- ln$core$datasets$small_dataset1(otype = \"DataFrame\", with_typo = TRUE) df #>         ENSG00000153563 ENSG00000010610 ENSG00000170458 perturbation #> sample1               1               3               5         DMSO #> sample2               2               4               6         IFNJ #> sample3               3               5               7         DMSO #>         sample_note             cell_type_by_expert cell_type_by_model #> sample1      was ok                          B cell             B cell #> sample2  looks naah CD8-positive, alpha-beta T cell             T cell #> sample3  pretty! 🤩 CD8-positive, alpha-beta T cell             T cell #>           assay_oid concentration treatment_time_h donor #> sample1 EFO:0008913          0.1%               24 D0001 #> sample2 EFO:0008913        200 nM               24 D0002 #> sample3 EFO:0008913          0.1%                6  <NA> #>                      donor_ethnicity #> sample1 Chinese, Singaporean Chinese #> sample2         Chinese, Han Chinese #> sample3                      Chinese  artifact <- ln$Artifact$from_df(df, key = \"my_datasets/rnaseq1.parquet\")$save()  # create and save artifact$describe()  # describe #> Artifact .parquet · DataFrame · dataset #> └── General #>     ├── key: my_datasets/rnaseq1.parquet #>     ├── uid: 8l8TvRVzUCclJ9DK0000          hash: HKW_WyxrWs6Jt_7jfLSlkQ #>     ├── size: 9.2 KB                       transform: introduction.Rmd #>     ├── space: all                         branch: all #>     ├── created_by: testuser1              created_at: 2025-08-26 07:02:26 #>     ├── n_observations: 3 #>     └── storage path:  #>         /tmp/Rtmpfx649H/laminr-intro-20250826070152/my_datasets/rnaseq1.parquet"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"access-artifacts","dir":"Articles","previous_headings":"Manage artifacts","what":"Access artifacts","title":"Introduction","text":"See https://docs.lamin.ai/introduction#access-artifacts","code":"artifact <- ln$Artifact$get(key = \"my_datasets/rnaseq1.parquet\")  artifact$load() #>         ENSG00000153563 ENSG00000010610 ENSG00000170458 perturbation #> sample1               1               3               5         DMSO #> sample2               2               4               6         IFNJ #> sample3               3               5               7         DMSO #>         sample_note             cell_type_by_expert cell_type_by_model #> sample1      was ok                          B cell             B cell #> sample2  looks naah CD8-positive, alpha-beta T cell             T cell #> sample3  pretty! 🤩 CD8-positive, alpha-beta T cell             T cell #>           assay_oid concentration treatment_time_h donor #> sample1 EFO:0008913          0.1%               24 D0001 #> sample2 EFO:0008913        200 nM               24 D0002 #> sample3 EFO:0008913          0.1%                6  <NA> #>                      donor_ethnicity #> sample1 Chinese, Singaporean Chinese #> sample2         Chinese, Han Chinese #> sample3                      Chinese  artifact$cache() #> [1] \"/tmp/Rtmpfx649H/laminr-intro-20250826070152/.lamindb/8l8TvRVzUCclJ9DK0000.parquet\""},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"trace-data-lineage","dir":"Articles","previous_headings":"Manage artifacts","what":"Trace data lineage","title":"Introduction","text":"See https://docs.lamin.ai/introduction#trace-data-lineage","code":"artifact$transform #> Transform(uid='LW2uVWhBFjUr0000', is_latest=True, key='introduction.Rmd', description='introduction.Rmd', type='notebook', branch_id=1, space_id=1, created_by_id=1, created_at=2025-08-26 07:02:25 UTC)  artifact$run #> Run(uid='FHVRWxtBujoWkQOL', started_at=2025-08-26 07:02:25 UTC, branch_id=1, space_id=1, transform_id=1, created_by_id=1, created_at=2025-08-26 07:02:25 UTC)  artifact$view_lineage() ln$finish()  # mark run as finished, save execution report & source code"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"annotate-an-artifact","dir":"Articles","previous_headings":"Manage artifacts","what":"Annotate an artifact","title":"Introduction","text":"See https://docs.lamin.ai/introduction#annotate--artifact","code":"# create a label my_experiment <- ln$ULabel(name = \"My experiment\")$save()  # annotate the artifact with a label artifact$ulabels$add(my_experiment)  # describe the artifact artifact$describe() #> Artifact .parquet · DataFrame · dataset #> ├── General #> │   ├── key: my_datasets/rnaseq1.parquet #> │   ├── uid: 8l8TvRVzUCclJ9DK0000          hash: HKW_WyxrWs6Jt_7jfLSlkQ #> │   ├── size: 9.2 KB                       transform: introduction.Rmd #> │   ├── space: all                         branch: all #> │   ├── created_by: testuser1              created_at: 2025-08-26 07:02:26 #> │   ├── n_observations: 3 #> │   └── storage path:  #> │       /tmp/Rtmpfx649H/laminr-intro-20250826070152/my_datasets/rnaseq1.parquet #> └── Labels #>     └── .ulabels            ULabel                  My experiment  ln$Artifact$filter(ulabels = my_experiment)$df() #>                    uid                         key description   suffix    kind #> 1 8l8TvRVzUCclJ9DK0000 my_datasets/rnaseq1.parquet        <NA> .parquet dataset #>       otype size                   hash n_files n_observations _hash_type #> 1 DataFrame 9401 HKW_WyxrWs6Jt_7jfLSlkQ    <NA>              3        md5 #>   _key_is_virtual _overwrite_versions space_id storage_id schema_id version #> 1            TRUE               FALSE        1          1      <NA>    <NA> #>   is_latest run_id          created_at created_by_id _aux branch_id #> 1      TRUE      1 2025-08-26 07:02:26             1 TRUE         1  bt <- import_module(\"bionty\")  # create a cell type label from the source ontology cell_type <- bt$CellType$from_source(name = \"effector T cell\")$save() #> ... synchronizing df_all__cl__2025-04-10__CellType.parquet:  0.0%... synchronizing df_all__cl__2025-04-10__CellType.parquet:  5.4%... synchronizing df_all__cl__2025-04-10__CellType.parquet: 27.0%... synchronizing df_all__cl__2025-04-10__CellType.parquet: 34.2%... synchronizing df_all__cl__2025-04-10__CellType.parquet: 55.8%... synchronizing df_all__cl__2025-04-10__CellType.parquet: 77.3%... synchronizing df_all__cl__2025-04-10__CellType.parquet: 98.9%... synchronizing df_all__cl__2025-04-10__CellType.parquet: 100.0%  # annotate the artifact with a cell type artifact$cell_types$add(cell_type)  # describe the artifact artifact$describe() #> Artifact .parquet · DataFrame · dataset #> ├── General #> │   ├── key: my_datasets/rnaseq1.parquet #> │   ├── uid: 8l8TvRVzUCclJ9DK0000          hash: HKW_WyxrWs6Jt_7jfLSlkQ #> │   ├── size: 9.2 KB                       transform: introduction.Rmd #> │   ├── space: all                         branch: all #> │   ├── created_by: testuser1              created_at: 2025-08-26 07:02:26 #> │   ├── n_observations: 3 #> │   └── storage path:  #> │       /tmp/Rtmpfx649H/laminr-intro-20250826070152/my_datasets/rnaseq1.parquet #> └── Labels #>     └── .cell_types         bionty.CellType         effector T cell              #>         .ulabels            ULabel                  My experiment  ln$Artifact$filter(cell_types = cell_type)$df() #>                    uid                         key description   suffix    kind #> 1 8l8TvRVzUCclJ9DK0000 my_datasets/rnaseq1.parquet        <NA> .parquet dataset #>       otype size                   hash n_files n_observations _hash_type #> 1 DataFrame 9401 HKW_WyxrWs6Jt_7jfLSlkQ    <NA>              3        md5 #>   _key_is_virtual _overwrite_versions space_id storage_id schema_id version #> 1            TRUE               FALSE        1          1      <NA>    <NA> #>   is_latest run_id          created_at created_by_id _aux branch_id #> 1      TRUE      1 2025-08-26 07:02:26             1 TRUE         1  # define the \"temperature\" & \"experiment\" features ln$Feature(name = \"temperature\", dtype = \"float\")$save() #> Feature(uid='3xuRans9pqm1', name='temperature', dtype='float', array_rank=0, array_size=0, branch_id=1, space_id=1, created_by_id=1, run_id=1, created_at=2025-08-26 07:02:45 UTC) ln$Feature(name = \"experiment\", dtype = ln$ULabel)$save() #> Feature(uid='T1Vm3qf4bfEB', name='experiment', dtype='cat[ULabel]', array_rank=0, array_size=0, branch_id=1, space_id=1, created_by_id=1, run_id=1, created_at=2025-08-26 07:02:46 UTC)  # annotate the artifact artifact$features$add_values(   list(\"temperature\" = 21.6, \"experiment\" = \"My experiment\") )  # describe the artifact artifact$describe() #> Artifact .parquet · DataFrame · dataset #> ├── General #> │   ├── key: my_datasets/rnaseq1.parquet #> │   ├── uid: 8l8TvRVzUCclJ9DK0000          hash: HKW_WyxrWs6Jt_7jfLSlkQ #> │   ├── size: 9.2 KB                       transform: introduction.Rmd #> │   ├── space: all                         branch: all #> │   ├── created_by: testuser1              created_at: 2025-08-26 07:02:26 #> │   ├── n_observations: 3 #> │   └── storage path:  #> │       /tmp/Rtmpfx649H/laminr-intro-20250826070152/my_datasets/rnaseq1.parquet #> ├── Linked features #> │   └── experiment          cat[ULabel]             My experiment                #> │       temperature         float                   21.6                         #> └── Labels #>     └── .cell_types         bionty.CellType         effector T cell              #>         .ulabels            ULabel                  My experiment  ln$Artifact$filter(temperature = 21.6)$df() #>                    uid                         key description   suffix    kind #> 1 8l8TvRVzUCclJ9DK0000 my_datasets/rnaseq1.parquet        <NA> .parquet dataset #>       otype size                   hash n_files n_observations _hash_type #> 1 DataFrame 9401 HKW_WyxrWs6Jt_7jfLSlkQ    <NA>              3        md5 #>   _key_is_virtual _overwrite_versions space_id storage_id schema_id version #> 1            TRUE               FALSE        1          1      <NA>    <NA> #>   is_latest run_id          created_at created_by_id _aux branch_id #> 1      TRUE      1 2025-08-26 07:02:26             1 TRUE         1"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"validate-an-artifact","dir":"Articles","previous_headings":"Manage artifacts","what":"Validate an artifact","title":"Introduction","text":"See https://docs.lamin.ai/introduction#validate--artifact","code":"bt <- import_module(\"bionty\")  # <-- use bionty to access registries with imported public ontologies  # define a few more valid labels ln$ULabel(name = \"DMSO\")$save() #> ULabel(uid='CMYDPSXl', name='DMSO', is_type=False, branch_id=1, space_id=1, created_by_id=1, run_id=1, created_at=2025-08-26 07:02:46 UTC) ln$ULabel(name = \"IFNG\")$save() #> ULabel(uid='yLEjRn5o', name='IFNG', is_type=False, branch_id=1, space_id=1, created_by_id=1, run_id=1, created_at=2025-08-26 07:02:46 UTC)  # define a few more valid features ln$Feature(name = \"perturbation\", dtype = ln$ULabel)$save() #> Feature(uid='E9ES0Psn2h2p', name='perturbation', dtype='cat[ULabel]', array_rank=0, array_size=0, branch_id=1, space_id=1, created_by_id=1, run_id=1, created_at=2025-08-26 07:02:46 UTC) ln$Feature(name = \"cell_type_by_model\", dtype = bt$CellType)$save() #> Feature(uid='5JgfvahAj4VV', name='cell_type_by_model', dtype='cat[bionty.CellType]', array_rank=0, array_size=0, branch_id=1, space_id=1, created_by_id=1, run_id=1, created_at=2025-08-26 07:02:47 UTC) ln$Feature(name = \"cell_type_by_expert\", dtype = bt$CellType)$save() #> Feature(uid='ztNhr8waHbUQ', name='cell_type_by_expert', dtype='cat[bionty.CellType]', array_rank=0, array_size=0, branch_id=1, space_id=1, created_by_id=1, run_id=1, created_at=2025-08-26 07:02:47 UTC) ln$Feature(name = \"assay_oid\", dtype = bt$ExperimentalFactor$ontology_id)$save() #> Feature(uid='TD1AqM3KTsPk', name='assay_oid', dtype='cat[bionty.ExperimentalFactor.ontology_id]', array_rank=0, array_size=0, branch_id=1, space_id=1, created_by_id=1, run_id=1, created_at=2025-08-26 07:02:47 UTC) ln$Feature(name = \"donor\", dtype = \"str\", nullable = TRUE)$save() #> Feature(uid='5G3txOY2hgyq', name='donor', dtype='str', array_rank=0, array_size=0, branch_id=1, space_id=1, created_by_id=1, run_id=1, created_at=2025-08-26 07:02:47 UTC) ln$Feature(name = \"concentration\", dtype = \"str\")$save() #> Feature(uid='iUaSPaS9zg57', name='concentration', dtype='str', array_rank=0, array_size=0, branch_id=1, space_id=1, created_by_id=1, run_id=1, created_at=2025-08-26 07:02:47 UTC) ln$Feature(name = \"treatment_time_h\", dtype = \"num\", coerce_dtype = TRUE)$save() #> Feature(uid='2d0CJd3vOLj3', name='treatment_time_h', dtype='num', array_rank=0, array_size=0, branch_id=1, space_id=1, created_by_id=1, run_id=1, created_at=2025-08-26 07:02:47 UTC)  # define a schema that merely enforces a feature identifier type schema <- ln$Schema(itype = ln$Feature)$save()  testthat::expect_error(   artifact <- ln$Artifact$from_df(     df, key = \"my_datasets/rnaseq1.parquet\", schema = schema   ) ) #> → returning existing artifact with same hash: Artifact(uid='8l8TvRVzUCclJ9DK0000', is_latest=True, key='my_datasets/rnaseq1.parquet', suffix='.parquet', kind='dataset', otype='DataFrame', size=9401, hash='HKW_WyxrWs6Jt_7jfLSlkQ', n_observations=3, branch_id=1, space_id=1, storage_id=1, run_id=1, created_by_id=1, created_at=2025-08-26 07:02:26 UTC); to track this artifact as an input, use: ln.Artifact.get() #> ! 5 terms not validated in feature 'columns': 'ENSG00000153563', 'ENSG00000010610', 'ENSG00000170458', 'sample_note', 'donor_ethnicity' #>     → fix typos, remove non-existent values, or save terms via: curator.cat.add_new_from('columns') #> ! 1 term not validated in feature 'perturbation': 'IFNJ' #>     → fix typos, remove non-existent values, or save terms via: curator.cat.add_new_from('perturbation') #> ... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet:  0.0%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet:  0.9%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet:  4.5%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet:  5.8%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet:  9.4%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 13.0%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 16.6%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 20.2%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 23.8%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 27.4%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 31.1%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 34.6%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 38.3%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 41.9%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 45.5%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 49.1%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 52.7%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 56.3%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 59.9%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 63.5%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 67.1%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 70.8%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 74.4%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 77.9%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 81.6%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 85.2%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 88.8%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 92.4%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 96.0%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 99.6%... synchronizing df_all__efo__3.70.0__ExperimentalFactor.parquet: 100.0%"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"make-a-new-version-of-an-artifact","dir":"Articles","previous_headings":"Manage artifacts","what":"Make a new version of an artifact","title":"Introduction","text":"See https://docs.lamin.ai/introduction#make--new-version---artifact","code":"# fix the \"IFNJ\" typo levels(df$perturbation) <- c(\"DMSO\", \"IFNG\") df[\"sample2\", \"perturbation\"] <- \"IFNG\"  # create a new version artifact <- ln$Artifact$from_df(df, key = \"my_datasets/rnaseq1.parquet\", schema = schema)$save() #> → creating new artifact version for key='my_datasets/rnaseq1.parquet' (storage: '/tmp/Rtmpfx649H/laminr-intro-20250826070152') #> ! 5 terms not validated in feature 'columns': 'ENSG00000153563', 'ENSG00000010610', 'ENSG00000170458', 'sample_note', 'donor_ethnicity' #>     → fix typos, remove non-existent values, or save terms via: curator.cat.add_new_from('columns')  # see the annotations artifact$describe() #> Artifact .parquet · DataFrame · dataset #> ├── General #> │   ├── key: my_datasets/rnaseq1.parquet #> │   ├── uid: 8l8TvRVzUCclJ9DK0001          hash: IgkztPcW_mRLCK5NlKwQ7w #> │   ├── size: 9.2 KB                       transform: introduction.Rmd #> │   ├── space: all                         branch: all #> │   ├── created_by: testuser1              created_at: 2025-08-26 07:03:53 #> │   ├── n_observations: 3 #> │   └── storage path:  #> │       /tmp/Rtmpfx649H/laminr-intro-20250826070152/my_datasets/rnaseq1.parquet #> ├── Dataset features #> │   └── columns • 7         [Feature]                                            #> │       assay_oid           cat[bionty.Experiment…  single-cell RNA sequencing   #> │       cell_type_by_expe…  cat[bionty.CellType]    B cell, CD8-positive, alpha… #> │       cell_type_by_model  cat[bionty.CellType]    B cell, T cell               #> │       perturbation        cat[ULabel]             DMSO, IFNG                   #> │       donor               str                                                  #> │       concentration       str                                                  #> │       treatment_time_h    num                                                  #> └── Labels #>     └── .cell_types         bionty.CellType         T cell, B cell, CD8-positiv… #>         .experimental_fac…  bionty.ExperimentalFa…  single-cell RNA sequencing   #>         .ulabels            ULabel                  DMSO, IFNG  # simplest way to check that artifact was validated artifact$schema #> Schema(uid='0000000000000000', is_type=False, itype='Feature', hash='kMi7B_N88uu-YnbTLDU-DA', minimal_set=True, ordered_set=False, maximal_set=False, branch_id=1, space_id=1, created_by_id=1, run_id=1, created_at=2025-08-26 07:02:48 UTC)  # see all versions of an artifact artifact$versions$df() #>                    uid                         key description   suffix    kind #> 2 8l8TvRVzUCclJ9DK0001 my_datasets/rnaseq1.parquet        <NA> .parquet dataset #> 1 8l8TvRVzUCclJ9DK0000 my_datasets/rnaseq1.parquet        <NA> .parquet dataset #>       otype size                   hash n_files n_observations _hash_type #> 2 DataFrame 9401 IgkztPcW_mRLCK5NlKwQ7w    <NA>              3        md5 #> 1 DataFrame 9401 HKW_WyxrWs6Jt_7jfLSlkQ    <NA>              3        md5 #>   _key_is_virtual _overwrite_versions space_id storage_id schema_id version #> 2            TRUE               FALSE        1          1         1    <NA> #> 1            TRUE               FALSE        1          1       NaN    <NA> #>   is_latest run_id          created_at created_by_id _aux branch_id #> 2      TRUE      1 2025-08-26 07:03:53             1 TRUE         1 #> 1     FALSE      1 2025-08-26 07:02:26             1 TRUE         1 artifact_v1 <- ln$Artifact$from_df(df, description = \"Just a description\")$save() #> → returning existing artifact with same hash: Artifact(uid='8l8TvRVzUCclJ9DK0001', is_latest=True, key='my_datasets/rnaseq1.parquet', suffix='.parquet', kind='dataset', otype='DataFrame', size=9401, hash='IgkztPcW_mRLCK5NlKwQ7w', n_observations=3, branch_id=1, space_id=1, storage_id=1, run_id=1, schema_id=1, created_by_id=1, created_at=2025-08-26 07:03:53 UTC); to track this artifact as an input, use: ln.Artifact.get() #> ! updated description from None to Just a description # below revises artifact_v1 df_updated <- df df_updated[1, 1] <- 10 artifact_v2 <- ln$Artifact$from_df(df_updated, revises = artifact_v1)$save()"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"query-search-registries","dir":"Articles","previous_headings":"","what":"Query & search registries","title":"Introduction","text":"See https://docs.lamin.ai/introduction#query-search-registries","code":"ln$Artifact$df() #>                    uid                         key        description   suffix #> 3 8l8TvRVzUCclJ9DK0002 my_datasets/rnaseq1.parquet Just a description .parquet #> 2 8l8TvRVzUCclJ9DK0001 my_datasets/rnaseq1.parquet Just a description .parquet #> 1 8l8TvRVzUCclJ9DK0000 my_datasets/rnaseq1.parquet               <NA> .parquet #>      kind     otype size                   hash n_files n_observations #> 3 dataset DataFrame 9401 uQ1Xekr2gU5P-e727GgL9w    <NA>              3 #> 2 dataset DataFrame 9401 IgkztPcW_mRLCK5NlKwQ7w    <NA>              3 #> 1 dataset DataFrame 9401 HKW_WyxrWs6Jt_7jfLSlkQ    <NA>              3 #>   _hash_type _key_is_virtual _overwrite_versions space_id storage_id schema_id #> 3        md5            TRUE               FALSE        1          1       NaN #> 2        md5            TRUE               FALSE        1          1         1 #> 1        md5            TRUE               FALSE        1          1       NaN #>   version is_latest run_id          created_at created_by_id _aux branch_id #> 3    <NA>      TRUE      1 2025-08-26 07:03:54             1 TRUE         1 #> 2    <NA>     FALSE      1 2025-08-26 07:03:53             1 TRUE         1 #> 1    <NA>     FALSE      1 2025-08-26 07:02:26             1 TRUE         1  ln$Artifact$df(features = TRUE) #> → queried for all categorical features with dtype ULabel or Record and non-categorical features: (6) ['temperature', 'experiment', 'perturbation', 'donor', 'concentration', 'treatment_time_h'] #>                    uid                         key temperature    experiment #> 3 8l8TvRVzUCclJ9DK0002 my_datasets/rnaseq1.parquet         NaN          <NA> #> 2 8l8TvRVzUCclJ9DK0001 my_datasets/rnaseq1.parquet         NaN          <NA> #> 1 8l8TvRVzUCclJ9DK0000 my_datasets/rnaseq1.parquet        21.6 My experiment #>                    perturbation #> 3                           NaN #> 2 <environment: 0x55f239f91920> #> 1                           NaN  ln$Artifact #> Artifact #>   Simple fields #>     .uid: CharField #>     .key: CharField #>     .description: CharField #>     .suffix: CharField #>     .kind: CharField #>     .otype: CharField #>     .size: BigIntegerField #>     .hash: CharField #>     .n_files: BigIntegerField #>     .n_observations: BigIntegerField #>     .version: CharField #>     .is_latest: BooleanField #>     .created_at: DateTimeField #>     .updated_at: DateTimeField #>   Relational fields #>     .branch: Branch #>     .space: Space #>     .storage: Storage #>     .run: Run #>     .schema: Schema #>     .created_by: User #>     .ulabels: ULabel #>     .input_of_runs: Run #>     .feature_sets: Schema #>     .collections: Collection #>     .linked_in_records: Record #>     .records: Record #>     .references: Reference #>     .projects: Project #>   Bionty fields #>     .organisms: bionty.Organism #>     .genes: bionty.Gene #>     .proteins: bionty.Protein #>     .cell_markers: bionty.CellMarker #>     .tissues: bionty.Tissue #>     .cell_types: bionty.CellType #>     .diseases: bionty.Disease #>     .cell_lines: bionty.CellLine #>     .phenotypes: bionty.Phenotype #>     .pathways: bionty.Pathway #>     .experimental_factors: bionty.ExperimentalFactor #>     .developmental_stages: bionty.DevelopmentalStage #>     .ethnicities: bionty.Ethnicity #>  signature: (*args, **kwargs)  ln$view() #> **************** #> * module: core * #> **************** #> Artifact #>                      uid                          key         description  \\ #> id                                                                           #> 3   8l8TvRVzUCclJ9DK0002  my_datasets/rnaseq1.parquet  Just a description    #> 2   8l8TvRVzUCclJ9DK0001  my_datasets/rnaseq1.parquet  Just a description    #> 1   8l8TvRVzUCclJ9DK0000  my_datasets/rnaseq1.parquet                None    #>  #>       suffix     kind      otype  size                    hash n_files  \\ #> id                                                                        #> 3   .parquet  dataset  DataFrame  9401  uQ1Xekr2gU5P-e727GgL9w    None    #> 2   .parquet  dataset  DataFrame  9401  IgkztPcW_mRLCK5NlKwQ7w    None    #> 1   .parquet  dataset  DataFrame  9401  HKW_WyxrWs6Jt_7jfLSlkQ    None    #>  #>     n_observations _hash_type  _key_is_virtual  _overwrite_versions  space_id  \\ #> id                                                                               #> 3                3        md5             True                False         1    #> 2                3        md5             True                False         1    #> 1                3        md5             True                False         1    #>  #>     storage_id  schema_id version  is_latest  run_id  \\ #> id                                                      #> 3            1        NaN    None       True       1    #> 2            1        1.0    None      False       1    #> 1            1        NaN    None      False       1    #>  #>                          created_at  created_by_id                 _aux  \\ #> id                                                                         #> 3  2025-08-26 07:03:54.757000+00:00              1  {'af': {'0': True}}    #> 2  2025-08-26 07:03:53.100000+00:00              1  {'af': {'0': True}}    #> 1  2025-08-26 07:02:26.375000+00:00              1  {'af': {'0': True}}    #>  #>     branch_id   #> id              #> 3           1   #> 2           1   #> 1           1   #> Feature #>              uid                 name  \\ #> id                                       #> 9   2d0CJd3vOLj3     treatment_time_h    #> 8   iUaSPaS9zg57        concentration    #> 7   5G3txOY2hgyq                donor    #> 6   TD1AqM3KTsPk            assay_oid    #> 5   ztNhr8waHbUQ  cell_type_by_expert    #> 4   5JgfvahAj4VV   cell_type_by_model    #> 3   E9ES0Psn2h2p         perturbation    #>  #>                                          dtype is_type  unit description  \\ #> id                                                                          #> 9                                          num    None  None        None    #> 8                                          str    None  None        None    #> 7                                          str    None  None        None    #> 6   cat[bionty.ExperimentalFactor.ontology_id]    None  None        None    #> 5                         cat[bionty.CellType]    None  None        None    #> 4                         cat[bionty.CellType]    None  None        None    #> 3                                  cat[ULabel]    None  None        None    #>  #>     array_rank  array_size array_shape proxy_dtype synonyms _expect_many  \\ #> id                                                                          #> 9            0           0        None        None     None         None    #> 8            0           0        None        None     None         None    #> 7            0           0        None        None     None         None    #> 6            0           0        None        None     None         None    #> 5            0           0        None        None     None         None    #> 4            0           0        None        None     None         None    #> 3            0           0        None        None     None         None    #>  #>    _curation  space_id type_id  run_id                       created_at  \\ #> id                                                                         #> 9       None         1    None       1 2025-08-26 07:02:47.913000+00:00    #> 8       None         1    None       1 2025-08-26 07:02:47.803000+00:00    #> 7       None         1    None       1 2025-08-26 07:02:47.680000+00:00    #> 6       None         1    None       1 2025-08-26 07:02:47.569000+00:00    #> 5       None         1    None       1 2025-08-26 07:02:47.375000+00:00    #> 4       None         1    None       1 2025-08-26 07:02:47.180000+00:00    #> 3       None         1    None       1 2025-08-26 07:02:46.972000+00:00    #>  #>     created_by_id                                        _aux  branch_id   #> id                                                                         #> 9               1   {'af': {'0': None, '1': True, '2': True}}          1   #> 8               1  {'af': {'0': None, '1': True, '2': False}}          1   #> 7               1  {'af': {'0': None, '1': True, '2': False}}          1   #> 6               1  {'af': {'0': None, '1': True, '2': False}}          1   #> 5               1  {'af': {'0': None, '1': True, '2': False}}          1   #> 4               1  {'af': {'0': None, '1': True, '2': False}}          1   #> 3               1  {'af': {'0': None, '1': True, '2': False}}          1   #> FeatureValue #>     value                    hash  space_id  feature_id  run_id  \\ #> id                                                                 #> 1    21.6  XftFE5byhwPHY-11WjfNAw         1           1       1    #>  #>                          created_at  created_by_id  _aux  branch_id   #> id                                                                    #> 1  2025-08-26 07:02:46.222000+00:00              1  None          1   #> Run #>                  uid  name                       started_at finished_at  \\ #> id                                                                         #> 1   FHVRWxtBujoWkQOL  None 2025-08-26 07:02:25.188790+00:00        None    #>  #>    reference reference_type _is_consecutive  _status_code  space_id  \\ #> id                                                                     #> 1       None           None            None            -1         1    #>  #>     transform_id report_id _logfile_id environment_id initiated_by_run_id  \\ #> id                                                                           #> 1              1      None        None           None                None    #>  #>                          created_at  created_by_id  _aux  branch_id   #> id                                                                    #> 1  2025-08-26 07:02:25.189000+00:00              1  None          1   #> Schema #>                  uid  name description  n  is_type    itype otype dtype  \\ #> id                                                                         #> 1   0000000000000000  None        None -1    False  Feature  None  None    #> 2   R3ZQDdlSkCOyUCAP  None        None  7    False  Feature  None  None    #>  #>                       hash  minimal_set  ordered_set  maximal_set _curation  \\ #> id                                                                             #> 1   kMi7B_N88uu-YnbTLDU-DA         True        False        False      None    #> 2   HowHHCIxYZu0hptVcQRqhg         True        False        False      None    #>  #>     slot  space_id type_id validated_by_id composite_id  run_id  \\ #> id                                                                 #> 1   None         1    None            None         None       1    #> 2   None         1    None            None         None       1    #>  #>                          created_at  created_by_id                  _aux  \\ #> id                                                                          #> 1  2025-08-26 07:02:48.110000+00:00              1   {'af': {'2': True}}    #> 2  2025-08-26 07:03:53.122000+00:00              1  {'af': {'2': False}}    #>  #>     branch_id   #> id              #> 1           1   #> 2           1   #> Storage #>              uid                                         root description  \\ #> id                                                                           #> 1   lTa4hx3WmBdS  /tmp/Rtmpfx649H/laminr-intro-20250826070152        None    #>  #>      type region  instance_uid  space_id run_id  \\ #> id                                                 #> 1   local   None  1mtf6SwzLYo6         1   None    #>  #>                          created_at  created_by_id  _aux  branch_id   #> id                                                                    #> 1  2025-08-26 07:02:16.034000+00:00              1  None          1   #> Transform #>                  uid               key       description      type  \\ #> id                                                                    #> 1   LW2uVWhBFjUr0000  introduction.Rmd  introduction.Rmd  notebook    #>  #>    source_code  hash reference reference_type  space_id _template_id version  \\ #> id                                                                              #> 1         None  None      None           None         1         None    None    #>  #>     is_latest                       created_at  created_by_id  _aux  branch_id   #> id                                                                               #> 1        True 2025-08-26 07:02:25.184000+00:00              1  None          1   #> ULabel #>          uid           name  is_type description reference reference_type  \\ #> id                                                                           #> 3   yLEjRn5o           IFNG    False        None      None           None    #> 2   CMYDPSXl           DMSO    False        None      None           None    #> 1   X5rAf56F  My experiment    False        None      None           None    #>  #>     space_id type_id  run_id                       created_at  created_by_id  \\ #> id                                                                              #> 3          1    None       1 2025-08-26 07:02:46.778000+00:00              1    #> 2          1    None       1 2025-08-26 07:02:46.692000+00:00              1    #> 1          1    None       1 2025-08-26 07:02:28.471000+00:00              1    #>  #>     _aux  branch_id   #> id                    #> 3   None          1   #> 2   None          1   #> 1   None          1   #> ****************** #> * module: bionty * #> ****************** #> CellType #>          uid                             name ontology_id  abbr  \\ #> id                                                                 #> 16  6By01L04                alpha-beta T cell  CL:0000789  None    #> 17  4BEwsp1Q         mature alpha-beta T cell  CL:0000791  None    #> 15  6IC9NGJE  CD8-positive, alpha-beta T cell  CL:0000625  None    #> 14  7GpphKmr          lymphocyte of B lineage  CL:0000945  None    #> 13  ryEtgi1y                           B cell  CL:0000236  None    #> 3   4bKGljt0                             cell  CL:0000000  None    #> 4   22LvKd01                           T cell  CL:0000084  None    #>  #>                                              synonyms  \\ #> id                                                       #> 16  alpha-beta T-cell|alpha-beta T-lymphocyte|alph...    #> 17  mature alpha-beta T-cell|mature alpha-beta T l...    #> 15  CD8-positive, alpha-beta T-lymphocyte|CD8-posi...    #> 14                                               None    #> 13                   B-cell|B-lymphocyte|B lymphocyte    #> 3                                                None    #> 4                    T lymphocyte|T-lymphocyte|T-cell    #>  #>                                           description  space_id  source_id  \\ #> id                                                                            #> 16  A T Cell That Expresses An Alpha-Beta T Cell R...         1         16    #> 17   A Alpha-Beta T Cell That Has A Mature Phenotype.         1         16    #> 15  A T Cell Expressing An Alpha-Beta T Cell Recep...         1         16    #> 14  A Lymphocyte Of B Lineage With The Commitment ...         1         16    #> 13  A Lymphocyte Of B Lineage That Is Capable Of B...         1         16    #> 3   A Material Entity Of Anatomical Origin (Part O...         1         16    #> 4   A Type Of Lymphocyte Whose Defining Characteri...         1         16    #>  #>     run_id                       created_at  created_by_id  _aux  branch_id   #> id                                                                            #> 16       1 2025-08-26 07:02:49.626000+00:00              1  None          1   #> 17       1 2025-08-26 07:02:49.626000+00:00              1  None          1   #> 15       1 2025-08-26 07:02:49.430000+00:00              1  None          1   #> 14       1 2025-08-26 07:02:48.922000+00:00              1  None          1   #> 13       1 2025-08-26 07:02:48.712000+00:00              1  None          1   #> 3        1 2025-08-26 07:02:45.717000+00:00              1  None          1   #> 4        1 2025-08-26 07:02:45.717000+00:00              1  None          1   #> ExperimentalFactor #>          uid                        name  ontology_id  abbr  \\ #> id                                                             #> 2   789nVHwo                   RNA assay  EFO:0001457  None    #> 3   1wLRxESw           assay by molecule  EFO:0002772  None    #> 4   6oIjaW4X         assay by instrument  EFO:0002773  None    #> 5   6dI7vyK2          assay by sequencer  EFO:0003740  None    #> 6   2zGOHoUs      single cell sequencing  EFO:0007832  None    #> 1   4WYv9kl0  single-cell RNA sequencing  EFO:0008913  None    #>  #>                                              synonyms  \\ #> id                                                       #> 2                                                None    #> 3                                                None    #> 4                                                None    #> 5                                    sequencing assay    #> 6                                                None    #> 1   single-cell RNA-seq|scRNA-seq|single cell RNA ...    #>  #>                                           description   molecule  \\ #> id                                                                  #> 2                             An Assay With Input Rna  RNA assay    #> 3                                                None       None    #> 4                                                None       None    #> 5   An Assay That Exploits A Sequencer As The Inst...       None    #> 6   Single Cell Sequencing Examines The Sequence I...       None    #> 1   A Protocol That Provides The Expression Profil...  RNA assay    #>  #>                 instrument measurement  space_id  source_id  run_id  \\ #> id                                                                     #> 2                     None        None         1         21       1    #> 3                     None        None         1         21       1    #> 4                     None        None         1         21       1    #> 5       assay by sequencer        None         1         21       1    #> 6   single cell sequencing        None         1         21       1    #> 1   single cell sequencing        None         1         21       1    #>  #>                          created_at  created_by_id  _aux  branch_id   #> id                                                                    #> 2  2025-08-26 07:03:52.338000+00:00              1  None          1   #> 3  2025-08-26 07:03:52.338000+00:00              1  None          1   #> 4  2025-08-26 07:03:52.338000+00:00              1  None          1   #> 5  2025-08-26 07:03:52.338000+00:00              1  None          1   #> 6  2025-08-26 07:03:52.338000+00:00              1  None          1   #> 1  2025-08-26 07:03:52.073000+00:00              1  None          1   #> Source #>          uid                     entity     organism     name  in_db  \\ #> id                                                                      #> 16  3T9KZcjQ            bionty.CellType          all       cl   True    #> 21  2a1HvjdB  bionty.ExperimentalFactor          all      efo  False    #> 1   33TUF039            bionty.Organism  vertebrates  ensembl  False    #> 2   6bbVUTCS            bionty.Organism     bacteria  ensembl  False    #> 3   6s9nV6xh            bionty.Organism        fungi  ensembl  False    #> 4   2PmTrc8x            bionty.Organism      metazoa  ensembl  False    #> 5   7GPHh16S            bionty.Organism       plants  ensembl  False    #>  #>     currently_used                       description  \\ #> id                                                      #> 16            True                     Cell Ontology    #> 21            True  The Experimental Factor Ontology    #> 1             True                           Ensembl    #> 2             True                           Ensembl    #> 3             True                           Ensembl    #> 4             True                           Ensembl    #> 5             True                           Ensembl    #>  #>                                                   url   md5  \\ #> id                                                             #> 16  http://purl.obolibrary.org/obo/cl/releases/202...  None    #> 21  http://www.ebi.ac.uk/efo/releases/v3.70.0/efo.owl  None    #> 1   https://ftp.ensembl.org/pub/release-112/specie...  None    #> 2   https://ftp.ensemblgenomes.ebi.ac.uk/pub/bacte...  None    #> 3   https://ftp.ensemblgenomes.ebi.ac.uk/pub/fungi...  None    #> 4   https://ftp.ensemblgenomes.ebi.ac.uk/pub/metaz...  None    #> 5   https://ftp.ensemblgenomes.ebi.ac.uk/pub/plant...  None    #>  #>                                       source_website  space_id  \\ #> id                                                                #> 16      https://obophenotype.github.io/cell-ontology         1    #> 21  https://bioportal.bioontology.org/ontologies/EFO         1    #> 1                            https://www.ensembl.org         1    #> 2                            https://www.ensembl.org         1    #> 3                            https://www.ensembl.org         1    #> 4                            https://www.ensembl.org         1    #> 5                            https://www.ensembl.org         1    #>  #>    dataframe_artifact_id      version run_id                       created_at  \\ #> id                                                                               #> 16                  None   2025-04-10   None 2025-08-26 07:02:16.076000+00:00    #> 21                  None       3.70.0   None 2025-08-26 07:02:16.076000+00:00    #> 1                   None  release-112   None 2025-08-26 07:02:16.076000+00:00    #> 2                   None   release-57   None 2025-08-26 07:02:16.076000+00:00    #> 3                   None   release-57   None 2025-08-26 07:02:16.076000+00:00    #> 4                   None   release-57   None 2025-08-26 07:02:16.076000+00:00    #> 5                   None   release-57   None 2025-08-26 07:02:16.076000+00:00    #>  #>     created_by_id  _aux  branch_id   #> id                                   #> 16              1  None          1   #> 21              1  None          1   #> 1               1  None          1   #> 2               1  None          1   #> 3               1  None          1   #> 4               1  None          1   #> 5               1  None          1  # get a single record (here the current notebook) transform <- ln$Transform$get(key = \"introduction.Rmd\")  # get a set of records by filtering for a directory (LaminDB treats directories # like AWS S3, as the prefix of the storage key) ln$Artifact$filter(key__startswith = \"my_datasets/\")$df() #>                    uid                         key        description   suffix #> 1 8l8TvRVzUCclJ9DK0000 my_datasets/rnaseq1.parquet               <NA> .parquet #> 2 8l8TvRVzUCclJ9DK0001 my_datasets/rnaseq1.parquet Just a description .parquet #> 3 8l8TvRVzUCclJ9DK0002 my_datasets/rnaseq1.parquet Just a description .parquet #>      kind     otype size                   hash n_files n_observations #> 1 dataset DataFrame 9401 HKW_WyxrWs6Jt_7jfLSlkQ    <NA>              3 #> 2 dataset DataFrame 9401 IgkztPcW_mRLCK5NlKwQ7w    <NA>              3 #> 3 dataset DataFrame 9401 uQ1Xekr2gU5P-e727GgL9w    <NA>              3 #>   _hash_type _key_is_virtual _overwrite_versions space_id storage_id schema_id #> 1        md5            TRUE               FALSE        1          1       NaN #> 2        md5            TRUE               FALSE        1          1         1 #> 3        md5            TRUE               FALSE        1          1       NaN #>   version is_latest run_id          created_at created_by_id _aux branch_id #> 1    <NA>     FALSE      1 2025-08-26 07:02:26             1 TRUE         1 #> 2    <NA>     FALSE      1 2025-08-26 07:03:53             1 TRUE         1 #> 3    <NA>      TRUE      1 2025-08-26 07:03:54             1 TRUE         1  # query all artifacts ingested from a transform artifacts <- ln$Artifact$filter(transform = transform)$all()  # query all artifacts ingested from a notebook with \"intro\" in the title artifacts <- ln$Artifact$filter(   transform__description__icontains = \"intro\" )$all()  # search artifacts ln$Artifact$search(\"iris\")$df() #>  [1] uid                 id                  key                 #>  [4] description         suffix              kind                #>  [7] otype               size                hash                #> [10] n_files             n_observations      _hash_type          #> [13] _key_is_virtual     _overwrite_versions space_id            #> [16] storage_id          schema_id           version             #> [19] is_latest           run_id              created_at          #> [22] created_by_id       _aux                branch_id           #> <0 rows> (or 0-length row.names)  # search transforms ln$Transform$search(\"intro\")$df() #>                uid              key      description     type source_code hash #> 1 LW2uVWhBFjUr0000 introduction.Rmd introduction.Rmd notebook        <NA> <NA> #>   reference reference_type space_id _template_id version is_latest #> 1      <NA>           <NA>        1         <NA>    <NA>      TRUE #>            created_at created_by_id _aux branch_id #> 1 2025-08-26 07:02:25             1 <NA>         1  # look up records with auto-complete ulabels <- ln$ULabel$lookup()"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"manage-files-folders","dir":"Articles","previous_headings":"","what":"Manage files & folders","title":"Introduction","text":"See https://docs.lamin.ai/introduction#manage-files-folders","code":"# we use anon=True here in case no aws credentials are configured ln$UPath(\"s3://lamindata/iris_studies\", anon = TRUE)$view_tree() #> 3 sub-directories & 151 files with suffixes '.jpg', '.csv' #> s3://lamindata/iris_studies #> ├── study0_raw_images/ #> │   ├── iris-0337d20a3b7273aa0ddaa7d6afb57a37a759b060e4401871db3cefaa6adc068d.jpg #> │   ├── iris-0797945218a97d6e5251b4758a2ba1b418cbd52ce4ef46a3239e4b939bd9807b.jpg #> │   ├── iris-0f133861ea3fe1b68f9f1b59ebd9116ff963ee7104a0c4200218a33903f82444.jpg #> │   ├── iris-0fec175448a23db03c1987527f7e9bb74c18cffa76ef003f962c62603b1cbb87.jpg #> │   ├── iris-125b6645e086cd60131764a6bed12650e0f7f2091c8bbb72555c103196c01881.jpg #> │   ├── iris-13dfaff08727abea3da8cfd8d097fe1404e76417fefe27ff71900a89954e145a.jpg #> │   ├── iris-1566f7f5421eaf423a82b3c1cd1328f2a685c5ef87d8d8e710f098635d86d3d0.jpg #> │   ├── iris-1804702f49c2c385f8b30913569aebc6dce3da52ec02c2c638a2b0806f16014e.jpg #> │   ├── iris-318d451a8c95551aecfde6b55520f302966db0a26a84770427300780b35aa05a.jpg #> │   ├── iris-3dec97fe46d33e194520ca70740e4c2e11b0ffbffbd0aec0d06afdc167ddf775.jpg #> │   ├── iris-3eed72bc2511f619190ce79d24a0436fef7fcf424e25523cb849642d14ac7bcf.jpg #> │   ├── iris-430fa45aad0edfeb5b7138ff208fdeaa801b9830a9eb68f378242465b727289a.jpg #> │   ├── iris-4cc15cd54152928861ecbdc8df34895ed463403efb1571dac78e3223b70ef569.jpg #> │   ├── iris-4febb88ef811b5ca6077d17ef8ae5dbc598d3f869c52af7c14891def774d73fa.jpg #> │   ├── iris-590e7f5b8f4de94e4b82760919abd9684ec909d9f65691bed8e8f850010ac775.jpg #> │   ├── iris-5a313749aa61e9927389affdf88dccdf21d97d8a5f6aa2bd246ca4bc926903ba.jpg #> │   ├── iris-5b3106db389d61f4277f43de4953e660ff858d8ab58a048b3d8bf8d10f556389.jpg #> │   ├── iris-5f4e8fffde2404cc30be275999fddeec64f8a711ab73f7fa4eb7667c8475c57b.jpg #> │   ├── iris-68d83ad09262afb25337ccc1d0f3a6d36f118910f36451ce8a6600c77a8aa5bd.jpg #> │   ├── iris-70069edd7ab0b829b84bb6d4465b2ca4038e129bb19d0d3f2ba671adc03398cc.jpg #> │   ├── iris-7038aef1137814473a91f19a63ac7a55a709c6497e30efc79ca57cfaa688f705.jpg #> │   ├── iris-74d1acf18cfacd0a728c180ec8e1c7b4f43aff72584b05ac6b7c59f5572bd4d4.jpg #> │   ├── iris-7c3b5c5518313fc6ff2c27fcbc1527065cbb42004d75d656671601fa485e5838.jpg #> │   ├── iris-7cf1ebf02b2cc31539ed09ab89530fec6f31144a0d5248a50e7c14f64d24fe6e.jpg #> │   ├── iris-7dcc69fa294fe04767706c6f455ea6b31d33db647b08aab44b3cd9022e2f2249.jpg #> │   ├── iris-801b7efb867255e85137bc1e1b06fd6cbab70d20cab5b5046733392ecb5b3150.jpg #> │   ├── iris-8305dd2a080e7fe941ea36f3b3ec0aa1a195ad5d957831cf4088edccea9465e2.jpg #> │   ├── iris-83f433381b755101b9fc9fbc9743e35fbb8a1a10911c48f53b11e965a1cbf101.jpg #> │   ├── iris-874121a450fa8a420bdc79cc7808fd28c5ea98758a4b50337a12a009fa556139.jpg #> │   ├── iris-8c216e1acff39be76d6133e1f549d138bf63359fa0da01417e681842210ea262.jpg #> │   ├── iris-92c4268516ace906ad1ac44592016e36d47a8c72a51cacca8597ba9e18a8278b.jpg #> │   ├── iris-95d7ec04b8158f0873fa4aab7b0a5ec616553f3f9ddd6623c110e3bc8298248f.jpg #> │   ├── iris-9ce2d8c4f1eae5911fcbd2883137ba5542c87cc2fe85b0a3fbec2c45293c903e.jpg #> │   ├── iris-9ee27633bb041ef1b677e03e7a86df708f63f0595512972403dcf5188a3f48f5.jpg #> │   ├── iris-9fb8d691550315506ae08233406e8f1a4afed411ea0b0ac37e4b9cdb9c42e1ec.jpg #> │   ├── iris-9ffe51c2abd973d25a299647fa9ccaf6aa9c8eecf37840d7486a061438cf5771.jpg #> │   ├── iris-a2be5db78e5b603a5297d9a7eec4e7f14ef2cba0c9d072dc0a59a4db3ab5bb13.jpg #> │   ├── iris-ad7da5f15e2848ca269f28cd1dc094f6f685de2275ceaebb8e79d2199b98f584.jpg #> │   ├── iris-bc515e63b5a4af49db8c802c58c83db69075debf28c792990d55a10e881944d9.jpg #> │   ├── iris-bd8d83096126eaa10c44d48dbad4b36aeb9f605f1a0f6ca929d3d0d492dafeb6.jpg #> │   ├── iris-bdae8314e4385d8e2322abd8e63a82758a9063c77514f49fc252e651cbd79f82.jpg #> │   ├── iris-c175cd02ac392ecead95d17049f5af1dcbe37851c3e42d73e6bb813d588ea70b.jpg #> │   ├── iris-c31e6056c94b5cb618436fbaac9eaff73403fa1b87a72db2c363d172a4db1820.jpg #> │   ├── iris-ca40bc5839ee2f9f5dcac621235a1db2f533f40f96a35e1282f907b40afa457d.jpg #> │   ├── iris-ddb685c56cfb9c8496bcba0d57710e1526fff7d499536b3942d0ab375fa1c4a6.jpg #> │   ├── iris-e437a7c7ad2bbac87fef3666b40c4de1251b9c5f595183eda90a8d9b1ef5b188.jpg #> │   ├── iris-e7e0774289e2153cc733ff62768c40f34ac9b7b42e23c1abc2739f275e71a754.jpg #> │   ├── iris-e9da6dd69b7b07f80f6a813e2222eae8c8f7c3aeaa6bcc02b25ea7d763bcf022.jpg #> │   ├── iris-eb01666d4591b2e03abecef5a7ded79c6d4ecb6d1922382c990ad95210d55795.jpg #> │   ├── iris-f6e4890dee087bd52e2c58ea4c6c2652da81809603ea3af561f11f8c2775c5f3.jpg #> │   └── meta.csv #> ├── study1_raw_images/ #> │   ├── iris-0879d3f5b337fe512da1c7bf1d2bfd7616d744d3eef7fa532455a879d5cc4ba0.jpg #> │   ├── iris-0b486eebacd93e114a6ec24264e035684cebe7d2074eb71eb1a71dd70bf61e8f.jpg #> │   ├── iris-0ff5ba898a0ec179a25ca217af45374fdd06d606bb85fc29294291facad1776a.jpg #> │   ├── iris-1175239c07a943d89a6335fb4b99a9fb5aabb2137c4d96102f10b25260ae523f.jpg #> │   ├── iris-1289c57b571e8e98e4feb3e18a890130adc145b971b7e208a6ce5bad945b4a5a.jpg #> │   ├── iris-12adb3a8516399e27ff1a9d20d28dca4674836ed00c7c0ae268afce2c30c4451.jpg #> │   ├── iris-17ac8f7b5734443090f35bdc531bfe05b0235b5d164afb5c95f9d35f13655cf3.jpg #> │   ├── iris-2118d3f235a574afd48a1f345bc2937dad6e7660648516c8029f4e76993ea74d.jpg #> │   ├── iris-213cd179db580f8e633087dcda0969fd175d18d4f325cb5b4c5f394bbba0c1e0.jpg #> │   ├── iris-21a1255e058722de1abe928e5bbe1c77bda31824c406c53f19530a3ca40be218.jpg #> │   ├── iris-249370d38cc29bc2a4038e528f9c484c186fe46a126e4b6c76607860679c0453.jpg #> │   ├── iris-2ac575a689662b7045c25e2554df5f985a3c6c0fd5236fabef8de9c78815330c.jpg #> │   ├── iris-2c5b373c2a5fd214092eb578c75eb5dc84334e5f11a02f4fa23d5d316b18f770.jpg #> │   ├── iris-2ecaad6dfe3d9b84a756bc2303a975a732718b954a6f54eae85f681ea3189b13.jpg #> │   ├── iris-32827aec52e0f3fa131fa85f2092fc6fa02b1b80642740b59d029cef920c26b3.jpg #> │   ├── iris-336fc3472b6465826f7cd87d5cef8f78d43cf2772ebe058ce71e1c5bad74c0e1.jpg #> │   ├── iris-432026d8501abcd495bd98937a82213da97fca410af1c46889eabbcf2fd1b589.jpg #> │   ├── iris-49a9158e46e788a39eeaefe82b19504d58dde167f540df6bc9492c3916d5f7ca.jpg #> │   ├── iris-4b47f927405d90caa15cbf17b0442390fc71a2ca6fb8d07138e8de17d739e9a4.jpg #> │   ├── iris-5691cad06fe37f743025c097fa9c4cec85e20ca3b0efff29175e60434e212421.jpg #> │   ├── iris-5c38dba6f6c27064eb3920a5758e8f86c26fec662cc1ac4b5208d5f30d1e3ead.jpg #> │   ├── iris-5da184e8620ebf0feef4d5ffe4346e6c44b2fb60cecc0320bd7726a1844b14cd.jpg #> │   ├── iris-66eee9ff0bfa521905f733b2a0c6c5acad7b8f1a30d280ed4a17f54fe1822a7e.jpg #> │   ├── iris-6815050b6117cf2e1fd60b1c33bfbb94837b8e173ff869f625757da4a04965c9.jpg #> │   ├── iris-793fe85ddd6a97e9c9f184ed20d1d216e48bf85aa71633eff6d27073e0825d54.jpg #> │   ├── iris-850229e6293a741277eb5efaa64d03c812f007c5d0f470992a8d4cfdb902230c.jpg #> │   ├── iris-86d782d20ef7a60e905e367050b0413ca566acc672bc92add0bb0304faa54cfc.jpg #> │   ├── iris-875a96790adc5672e044cf9da9d2edb397627884dfe91c488ab3fb65f65c80ff.jpg #> │   ├── iris-96f06136df7a415550b90e443771d0b5b0cd990b503b64cc4987f5cb6797fa9b.jpg #> │   ├── iris-9a889c96a37e8927f20773783a084f31897f075353d34a304c85e53be480e72a.jpg #> │   ├── iris-9e3208f4f9fedc9598ddf26f77925a1e8df9d7865a4d6e5b4f74075d558d6a5e.jpg #> │   ├── iris-a7e13b6f2d7f796768d898f5f66dceefdbd566dd4406eea9f266fc16dd68a6f2.jpg #> │   ├── iris-b026efb61a9e3876749536afe183d2ace078e5e29615b07ac8792ab55ba90ebc.jpg #> │   ├── iris-b3c086333cb5ccb7bb66a163cf4bf449dc0f28df27d6580a35832f32fd67bfc9.jpg #> │   ├── iris-b795e034b6ea08d3cd9acaa434c67aca9d17016991e8dd7d6fd19ae8f6120b77.jpg #> │   ├── iris-bb4a7ad4c844987bc9dc9dfad2b363698811efe3615512997a13cd191c23febc.jpg #> │   ├── iris-bd60a6ed0369df4bea1934ef52277c32757838123456a595c0f2484959553a36.jpg #> │   ├── iris-c15d6019ebe17d7446ced589ef5ef7a70474d35a8b072e0edfcec850b0a106db.jpg #> │   ├── iris-c45295e76c6289504921412293d5ddbe4610bb6e3b593ea9ec90958e74b73ed2.jpg #> │   ├── iris-c50d481f9fa3666c2c3808806c7c2945623f9d9a6a1d93a17133c4cb1560c41c.jpg #> │   ├── iris-df4206653f1ec9909434323c05bb15ded18e72587e335f8905536c34a4be3d45.jpg #> │   ├── iris-e45d869cb9d443b39d59e35c2f47870f5a2a335fce53f0c8a5bc615b9c53c429.jpg #> │   ├── iris-e76fa5406e02a312c102f16eb5d27c7e0de37b35f801e1ed4c28bd4caf133e7a.jpg #> │   ├── iris-e8d3fd862aae1c005bcc80a73fd34b9e683634933563e7538b520f26fd315478.jpg #> │   ├── iris-ea578f650069a67e5e660bb22b46c23e0a182cbfb59cdf5448cf20ce858131b6.jpg #> │   ├── iris-eba0c546e9b7b3d92f0b7eb98b2914810912990789479838807993d13787a2d9.jpg #> │   ├── iris-f22d4b9605e62db13072246ff6925b9cf0240461f9dfc948d154b983db4243b9.jpg #> │   ├── iris-fac5f8c23d8c50658db0f4e4a074c2f7771917eb52cbdf6eda50c12889510cf4.jpg #> │   └── meta.csv #> └── study2_raw_images/ #>     ├── iris-01cdd55ca6402713465841abddcce79a2e906e12edf95afb77c16bde4b4907dc.jpg #>     ├── iris-02868b71ddd9b33ab795ac41609ea7b20a6e94f2543fad5d7fa11241d61feacf.jpg #>     ├── iris-0415d2f3295db04bebc93249b685f7d7af7873faa911cd270ecd8363bd322ed5.jpg #>     ├── iris-0c826b6f4648edf507e0cafdab53712bb6fd1f04dab453cee8db774a728dd640.jpg #>     ├── iris-10fb9f154ead3c56ba0ab2c1ab609521c963f2326a648f82c9d7cabd178fc425.jpg #>     ├── iris-14cbed88b0d2a929477bdf1299724f22d782e90f29ce55531f4a3d8608f7d926.jpg #>     ├── iris-186fe29e32ee1405ddbdd36236dd7691a3c45ba78cc4c0bf11489fa09fbb1b65.jpg #>     ├── iris-1b0b5aabd59e4c6ed1ceb54e57534d76f2f3f97e0a81800ff7ed901c35a424ab.jpg #>     ├── iris-1d35672eb95f5b1cf14c2977eb025c246f83cdacd056115fdc93e946b56b610c.jpg #>     ├── iris-1f941001f508ff1bd492457a90da64e52c461bfd64587a3cf7c6bf1bcb35adab.jpg #>     ├── iris-2a09038b87009ecee5e5b4cd4cef068653809cc1e08984f193fad00f1c0df972.jpg #>     ├── iris-308389e34b6d9a61828b339916aed7af295fdb1c7577c23fb37252937619e7e4.jpg #>     ├── iris-30e4e56b1f170ff4863b178a0a43ea7a64fdd06c1f89a775ec4dbf5fec71e15c.jpg #>     ├── iris-332953f4d6a355ca189e2508164b24360fc69f83304e7384ca2203ddcb7c73b5.jpg #>     ├── iris-338fc323ed045a908fb1e8ff991255e1b8e01c967e36b054cb65edddf97b3bb0.jpg #>     ├── iris-34a7cc16d26ba0883574e7a1c913ad50cf630e56ec08ee1113bf3584f4e40230.jpg #>     ├── iris-360196ba36654c0d9070f95265a8a90bc224311eb34d1ab0cf851d8407d7c28e.jpg #>     ├── iris-36132c6df6b47bda180b1daaafc7ac8a32fd7f9af83a92569da41429da49ea5b.jpg #>     ├── iris-36f2b9282342292b67f38a55a62b0c66fa4e5bb58587f7fec90d1e93ea8c407a.jpg #>     ├── iris-37ad07fd7b39bc377fa6e9cafdb6e0c57fb77df2c264fe631705a8436c0c2513.jpg #>     ├── iris-3ba1625bb78e4b69b114bdafcdab64104b211d8ebadca89409e9e7ead6a0557c.jpg #>     ├── iris-4c5d9a33327db025d9c391aeb182cbe20cfab4d4eb4ac951cc5cd15e132145d8.jpg #>     ├── iris-522f3eb1807d015f99e66e73b19775800712890f2c7f5b777409a451fa47d532.jpg #>     ├── iris-589fa96b9a3c2654cf08d05d3bebf4ab7bc23592d7d5a95218f9ff87612992fa.jpg #>     ├── iris-61b71f1de04a03ce719094b65179b06e3cd80afa01622b30cda8c3e41de6bfaa.jpg #>     ├── iris-62ef719cd70780088a4c140afae2a96c6ca9c22b72b078e3b9d25678d00b88a5.jpg #>     ├── iris-819130af42335d4bb75bebb0d2ee2e353a89a3d518a1d2ce69842859c5668c5a.jpg #>     ├── iris-8669e4937a2003054408afd228d99cb737e9db5088f42d292267c43a3889001a.jpg #>     ├── iris-86c76e0f331bc62192c392cf7c3ea710d2272a8cc9928d2566a5fc4559e5dce4.jpg #>     ├── iris-8a8bc54332a42bb35ee131d7b64e9375b4ac890632eb09e193835b838172d797.jpg #>     ├── iris-8e9439ec7231fa3b9bc9f62a67af4e180466b32a72316600431b1ec93e63b296.jpg #>     ├── iris-90b7d491b9a39bb5c8bb7649cce90ab7f483c2759fb55fda2d9067ac9eec7e39.jpg #>     ├── iris-9dededf184993455c411a0ed81d6c3c55af7c610ccb55c6ae34dfac2f8bde978.jpg #>     ├── iris-9e6ce91679c9aaceb3e9c930f11e788aacbfa8341a2a5737583c14a4d6666f3d.jpg #>     ├── iris-a0e65269f7dc7801ac1ad8bd0c5aa547a70c7655447e921d1d4d153a9d23815e.jpg #>     ├── iris-a445b0720254984275097c83afbdb1fe896cb010b5c662a6532ed0601ea24d7c.jpg #>     ├── iris-a6b85bf1f3d18bbb6470440592834c2c7f081b490836392cf5f01636ee7cf658.jpg #>     ├── iris-b005c82b844de575f0b972b9a1797b2b1fbe98c067c484a51006afc4f549ada4.jpg #>     ├── iris-bfcf79b3b527eb64b78f9a068a1000042336e532f0f44e68f818dd13ab492a76.jpg #>     ├── iris-c156236fb6e888764485e796f1f972bbc7ad960fe6330a7ce9182922046439c4.jpg #>     ├── iris-d99d5fd2de5be1419cbd569570dbb6c9a6c8ec4f0a1ff5b55dc2607f6ecdca8f.jpg #>     ├── iris-d9aae37a8fa6afdef2af170c266a597925eea935f4d070e979d565713ea62642.jpg #>     ├── iris-dbc87fcecade2c070baaf99caf03f4f0f6e3aa977e34972383cb94d0efe8a95d.jpg #>     ├── iris-e3d1a560d25cf573d2cbbf2fe6cd231819e998109a5cf1788d59fbb9859b3be2.jpg #>     ├── iris-ec288bdad71388f907457db2476f12a5cb43c28cfa28d2a2077398a42b948a35.jpg #>     ├── iris-ed5b4e072d43bc53a00a4a7f4d0f5d7c0cbd6a006e9c2d463128cedc956cb3de.jpg #>     ├── iris-f3018a9440d17c265062d1c61475127f9952b6fe951d38fd7700402d706c0b01.jpg #>     ├── iris-f47c5963cdbaa3238ba2d446848e8449c6af83e663f0a9216cf0baba8429b36f.jpg #>     ├── iris-fa4b6d7e3617216104b1405cda21bf234840cd84a2c1966034caa63def2f64f0.jpg #>     ├── iris-fc4b0cc65387ff78471659d14a78f0309a76f4c3ec641b871e40b40424255097.jpg #>     └── meta.csv  artifact <- ln$Artifact(\"s3://lamindata/iris_studies/study0_raw_images\")$save() #> → referenced read-only storage location at s3://lamindata, is managed by instance with uid 4XIuR0tvaiXM artifact #> Artifact(uid='xYobNyHllTMxMqUt0000', is_latest=True, key='iris_studies/study0_raw_images', suffix='', size=658465, hash='IVKGMfNwi8zKvnpaD_gG7w', n_files=51, branch_id=1, space_id=1, storage_id=2, run_id=1, created_by_id=1, created_at=2025-08-26 07:04:00 UTC)  artifact$path #> S3QueryPath('s3://lamindata/iris_studies/study0_raw_images')  ln$Storage$df() #>            uid                                        root description  type #> 2 YmV3ZoHvAAAA                              s3://lamindata        <NA>    s3 #> 1 lTa4hx3WmBdS /tmp/Rtmpfx649H/laminr-intro-20250826070152        <NA> local #>      region instance_uid space_id run_id          created_at created_by_id _aux #> 2 us-east-1 4XIuR0tvaiXM        1      1 2025-08-26 07:03:59             1 <NA> #> 1      <NA> 1mtf6SwzLYo6        1    NaN 2025-08-26 07:02:16             1 <NA> #>   branch_id #> 2         1 #> 1         1 artifact_update <- ln$Artifact$from_df(df, key = \"my_datasets/rnaseq-update.parquet\")$save() #> → returning existing artifact with same hash: Artifact(uid='8l8TvRVzUCclJ9DK0001', is_latest=False, key='my_datasets/rnaseq1.parquet', description='Just a description', suffix='.parquet', kind='dataset', otype='DataFrame', size=9401, hash='IgkztPcW_mRLCK5NlKwQ7w', n_observations=3, branch_id=1, space_id=1, storage_id=1, run_id=1, schema_id=1, created_by_id=1, created_at=2025-08-26 07:03:53 UTC); to track this artifact as an input, use: ln.Artifact.get() #> ! key my_datasets/rnaseq1.parquet on existing artifact differs from passed key my_datasets/rnaseq-update.parquet artifact_update$description <- \"My new description\"  # change description artifact_update$save()  # save the change to the database #> Artifact(uid='8l8TvRVzUCclJ9DK0001', is_latest=False, key='my_datasets/rnaseq1.parquet', description='My new description', suffix='.parquet', kind='dataset', otype='DataFrame', size=9401, hash='IgkztPcW_mRLCK5NlKwQ7w', n_observations=3, branch_id=1, space_id=1, storage_id=1, run_id=1, schema_id=1, created_by_id=1, created_at=2025-08-26 07:03:53 UTC) artifact_update$delete()  # move to trash #> ! moved record to trash (`branch_id = -1`): Artifact(uid='8l8TvRVzUCclJ9DK0001', is_latest=False, key='my_datasets/rnaseq1.parquet', description='My new description', suffix='.parquet', kind='dataset', otype='DataFrame', size=9401, hash='IgkztPcW_mRLCK5NlKwQ7w', n_observations=3, branch_id=-1, space_id=1, storage_id=1, run_id=1, schema_id=1, created_by_id=1, created_at=2025-08-26 07:03:53 UTC) artifact_update$delete(permanent = TRUE)  # permanently delete"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"manage-biological-registries","dir":"Articles","previous_headings":"","what":"Manage biological registries","title":"Introduction","text":"See https://docs.lamin.ai/introduction#manage-biological-registries","code":"bt <- import_module(\"bionty\")  cell_types <- bt$CellType$public() cell_types #> PublicOntology #> Entity: CellType #> Organism: all #> Source: cl, 2025-04-10 #> #terms: 3136  cell_types$search(\"gamma-delta T cell\") |> head(2) #>                                  name #> CL:0000798         gamma-delta T cell #> CL:4033072 cycling gamma-delta T cell #>                                                                definition #> CL:0000798 A T Cell That Expresses A Gamma-Delta T Cell Receptor Complex. #> CL:4033072                       A(N) Gamma-Delta T Cell That Is Cycling. #>                                                                                          synonyms #> CL:0000798 gamma-delta T lymphocyte|gamma-delta T-lymphocyte|gammadelta T cell|gamma-delta T-cell #> CL:4033072                                                       proliferating gamma-delta T cell #>                           parents #> CL:0000798             CL:0000084 #> CL:4033072 CL:4033069, CL:0000798  # define var schema var_schema <- ln$Schema(   name = \"my_var_schema\",   itype = bt$Gene$ensembl_gene_id,   dtype = \"int\" )$save()  # define composite schema anndata_schema <- ln$Schema(   name = \"my_anndata_schema\",   otype = \"AnnData\",   slots = list(\"obs\" = schema, \"var.T\" = var_schema) )$save()  # create an ontology-coupled cell type record and save it neuron <- bt$CellType$from_source(name = \"neuron\")$save()  # create a record to track a new cell state new_cell_state <- bt$CellType(   name = \"my neuron cell state\", description = \"explains X\" )$save()  # express that it's a neuron state new_cell_state$parents$add(neuron)  # view ontological hierarchy new_cell_state$view_parents(distance = 2)"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"manage-anndata-objects","dir":"Articles","previous_headings":"","what":"Manage AnnData objects","title":"Introduction","text":"See https://docs.lamin.ai/introduction#manage-anndata-objects","code":"# define var schema var_schema <- ln$Schema(itype = bt$Gene$ensembl_gene_id, dtype = \"int\")$save() #> → returning existing schema with same hash: Schema(uid='GfL3KbF4nNYn1ciq', name='my_var_schema', is_type=False, itype='bionty.Gene.ensembl_gene_id', dtype='int', hash='19TTwL-ibgfpSKcs9VUPxQ', minimal_set=True, ordered_set=False, maximal_set=False, branch_id=1, space_id=1, created_by_id=1, run_id=1, created_at=2025-08-26 07:04:02 UTC)  # define composite schema anndata_schema <- ln$Schema(   otype = \"AnnData\", components = list(\"obs\" = schema, \"var\" = var_schema) )$save() #> ! `components` as a keyword argument is deprecated, please use `slots` instead #> → returning existing schema with same hash: Schema(uid='bqKz6cVbYQDfNCvc', name='my_anndata_schema', is_type=False, itype='Composite', otype='AnnData', dtype='num', hash='xd3AGxxt2Flo4UTrghYJzA', minimal_set=True, ordered_set=False, maximal_set=False, branch_id=1, space_id=1, created_by_id=1, run_id=1, created_at=2025-08-26 07:04:02 UTC)  ad <- import_module(\"anndata\") #> ℹ Requiring anndata  # store the dataset as an AnnData object to distinguish data from metadata adata <- ad$AnnData(df[, 1:3], obs = df$iloc[, 4:(ncol(df) - 1)])  # save curated artifact artifact <- ln$Artifact$from_anndata(   adata, key = \"my_datasets/my_rnaseq1.h5ad\", schema = anndata_schema )$save() #> ... synchronizing ensembl_prefix.parquet:  0.0%... synchronizing ensembl_prefix.parquet: 41.8%... synchronizing ensembl_prefix.parquet: 100.0% #> ... synchronizing df_vertebrates__ensembl__release-112__Organism.parquet:  0.0%... synchronizing df_vertebrates__ensembl__release-112__Organism.parquet: 41.9%... synchronizing df_vertebrates__ensembl__release-112__Organism.parquet: 100.0% #> ... synchronizing df_human__ensembl__release-112__Gene.parquet:  0.0%... synchronizing df_human__ensembl__release-112__Gene.parquet:  0.7%... synchronizing df_human__ensembl__release-112__Gene.parquet:  3.2%... synchronizing df_human__ensembl__release-112__Gene.parquet:  4.7%... synchronizing df_human__ensembl__release-112__Gene.parquet:  7.3%... synchronizing df_human__ensembl__release-112__Gene.parquet:  9.8%... synchronizing df_human__ensembl__release-112__Gene.parquet: 12.4%... synchronizing df_human__ensembl__release-112__Gene.parquet: 14.9%... synchronizing df_human__ensembl__release-112__Gene.parquet: 17.5%... synchronizing df_human__ensembl__release-112__Gene.parquet: 20.1%... synchronizing df_human__ensembl__release-112__Gene.parquet: 22.6%... synchronizing df_human__ensembl__release-112__Gene.parquet: 25.2%... synchronizing df_human__ensembl__release-112__Gene.parquet: 27.7%... synchronizing df_human__ensembl__release-112__Gene.parquet: 30.3%... synchronizing df_human__ensembl__release-112__Gene.parquet: 32.9%... synchronizing df_human__ensembl__release-112__Gene.parquet: 35.4%... synchronizing df_human__ensembl__release-112__Gene.parquet: 38.0%... synchronizing df_human__ensembl__release-112__Gene.parquet: 40.6%... synchronizing df_human__ensembl__release-112__Gene.parquet: 43.1%... synchronizing df_human__ensembl__release-112__Gene.parquet: 45.7%... synchronizing df_human__ensembl__release-112__Gene.parquet: 48.2%... synchronizing df_human__ensembl__release-112__Gene.parquet: 50.8%... synchronizing df_human__ensembl__release-112__Gene.parquet: 53.4%... synchronizing df_human__ensembl__release-112__Gene.parquet: 55.9%... synchronizing df_human__ensembl__release-112__Gene.parquet: 58.5%... synchronizing df_human__ensembl__release-112__Gene.parquet: 61.0%... synchronizing df_human__ensembl__release-112__Gene.parquet: 63.6%... synchronizing df_human__ensembl__release-112__Gene.parquet: 66.1%... synchronizing df_human__ensembl__release-112__Gene.parquet: 68.7%... synchronizing df_human__ensembl__release-112__Gene.parquet: 71.2%... synchronizing df_human__ensembl__release-112__Gene.parquet: 73.8%... synchronizing df_human__ensembl__release-112__Gene.parquet: 76.1%... synchronizing df_human__ensembl__release-112__Gene.parquet: 78.7%... synchronizing df_human__ensembl__release-112__Gene.parquet: 81.3%... synchronizing df_human__ensembl__release-112__Gene.parquet: 83.8%... synchronizing df_human__ensembl__release-112__Gene.parquet: 86.4%... synchronizing df_human__ensembl__release-112__Gene.parquet: 89.0%... synchronizing df_human__ensembl__release-112__Gene.parquet: 91.5%... synchronizing df_human__ensembl__release-112__Gene.parquet: 94.1%... synchronizing df_human__ensembl__release-112__Gene.parquet: 96.7%... synchronizing df_human__ensembl__release-112__Gene.parquet: 99.2%... synchronizing df_human__ensembl__release-112__Gene.parquet: 100.0% #> ! no features found for slot obs artifact$describe() #> Artifact .h5ad · AnnData · dataset #> ├── General #> │   ├── key: my_datasets/my_rnaseq1.h5ad #> │   ├── uid: J0VVLgkzLaziJVs30000          hash: KPfvMMtL68rEYcUK4Itu9A #> │   ├── size: 16.9 KB                      transform: introduction.Rmd #> │   ├── space: all                         branch: all #> │   ├── created_by: testuser1              created_at: 2025-08-26 07:05:42 #> │   ├── n_observations: 3 #> │   └── storage path:  #> │       /tmp/Rtmpfx649H/laminr-intro-20250826070152/my_datasets/my_rnaseq1.h5ad #> └── Dataset features #>     └── var.T • 3           [bionty.Gene.ensembl_…                               #>         CD8A                num                                                  #>         CD4                 num                                                  #>         CD14                num                      # query for all feature sets that contain CD8A feature_sets <- ln$Schema$filter(genes__symbol = \"CD8A\")$all()  # query for all artifacts linked to these feature sets ln$Artifact$filter(feature_sets__in = feature_sets)$df() #>                    uid                         key description suffix    kind #> 5 J0VVLgkzLaziJVs30000 my_datasets/my_rnaseq1.h5ad        <NA>  .h5ad dataset #>     otype  size                   hash n_files n_observations _hash_type #> 5 AnnData 17256 KPfvMMtL68rEYcUK4Itu9A    <NA>              3        md5 #>   _key_is_virtual _overwrite_versions space_id storage_id schema_id version #> 5            TRUE               FALSE        1          1         4    <NA> #>   is_latest run_id          created_at created_by_id _aux branch_id #> 5      TRUE      1 2025-08-26 07:05:42             1 TRUE         1"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"scale-learning","dir":"Articles","previous_headings":"","what":"Scale learning","title":"Introduction","text":"See https://docs.lamin.ai/introduction#scale-learning","code":"# a new dataset df2 <- ln$core$datasets$small_dataset2(otype = \"DataFrame\") adata <- ad$AnnData(df2[, 1:3], obs = df2[, 4:(ncol(df2) - 1)]) artifact2 <- ln$Artifact$from_anndata(   adata, key = \"my_datasets/my_rnaseq2.h5ad\", schema = anndata_schema )$save()  collection <- ln$Collection(   list(artifact, artifact2), key = \"my-RNA-seq-collection\" )$save() collection$describe() #> Collection  #> └── General #>     ├── key: my-RNA-seq-collection #>     ├── uid: s06EUpwAeopkKYCg0000                    transform: introduction.Rmd #>     ├── space: all                                   branch: main #>     └── created_by: testuser1                        created_at: 2025-08-26  #>         07:05:45 collection$view_lineage() # if it's small enough, you can load the entire collection into memory as if it was one collection$load() #> AnnData object with n_obs × n_vars = 6 × 4 #>     obs: 'perturbation', 'cell_type_by_model', 'concentration', 'treatment_time_h', 'artifact_uid'  # typically, it's too big, hence, open it for streaming (if the backend allows it) # collection.open() # nolint  # or iterate over its artifacts collection$artifacts$all() #> <ArtifactBasicQuerySet [Artifact(uid='J0VVLgkzLaziJVs30000', is_latest=True, key='my_datasets/my_rnaseq1.h5ad', suffix='.h5ad', kind='dataset', otype='AnnData', size=17256, hash='KPfvMMtL68rEYcUK4Itu9A', n_observations=3, branch_id=1, space_id=1, storage_id=1, run_id=1, schema_id=4, created_by_id=1, created_at=2025-08-26 07:05:42 UTC), Artifact(uid='7cIaMtXXVZL3ApW90000', is_latest=True, key='my_datasets/my_rnaseq2.h5ad', suffix='.h5ad', kind='dataset', otype='AnnData', size=23712, hash='vw0CqippRMuSj8iwUbojpQ', n_observations=3, branch_id=1, space_id=1, storage_id=1, run_id=1, schema_id=4, created_by_id=1, created_at=2025-08-26 07:05:45 UTC)]>  # or look at a DataFrame listing the artifacts collection$artifacts$df() #>                    uid                         key description suffix    kind #> 5 J0VVLgkzLaziJVs30000 my_datasets/my_rnaseq1.h5ad        <NA>  .h5ad dataset #> 6 7cIaMtXXVZL3ApW90000 my_datasets/my_rnaseq2.h5ad        <NA>  .h5ad dataset #>     otype  size                   hash n_files n_observations _hash_type #> 5 AnnData 17256 KPfvMMtL68rEYcUK4Itu9A    <NA>              3        md5 #> 6 AnnData 23712 vw0CqippRMuSj8iwUbojpQ    <NA>              3        md5 #>   _key_is_virtual _overwrite_versions space_id storage_id schema_id version #> 5            TRUE               FALSE        1          1         4    <NA> #> 6            TRUE               FALSE        1          1         4    <NA> #>   is_latest run_id          created_at created_by_id _aux branch_id #> 5      TRUE      1 2025-08-26 07:05:42             1 TRUE         1 #> 6      TRUE      1 2025-08-26 07:05:45             1 TRUE         1"},{"path":"https://laminr.lamin.ai/articles/introduction.html","id":"finish","dir":"Articles","previous_headings":"","what":"Finish","title":"Introduction","text":"","code":"ln$finish() #> ! no html report found; to attach one, create an .html export for your .Rmd file and then run: lamin save introduction.Rmd #> → finished Run('FHVRWxtB') after 3m at 2025-08-26 07:05:46 UTC"},{"path":[]},{"path":[]},{"path":"https://laminr.lamin.ai/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robrecht Cannoodt. Author, maintainer. Luke Zappia. Author. Data Intuitive. Author. Lamin Labs. Author, copyright holder.","code":""},{"path":"https://laminr.lamin.ai/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cannoodt R, Zappia L, Data Intuitive, Lamin Labs (2025). laminr: Client 'LaminDB'. R package version 1.1.1.9008, https://laminr.lamin.ai.","code":"@Manual{,   title = {laminr: Client for 'LaminDB'},   author = {Robrecht Cannoodt and Luke Zappia and {Data Intuitive} and {Lamin Labs}},   year = {2025},   note = {R package version 1.1.1.9008},   url = {https://laminr.lamin.ai}, }"},{"path":"https://laminr.lamin.ai/index.html","id":"laminr-an-r-client-for-lamindb","dir":"","previous_headings":"","what":"Client for LaminDB","title":"Client for LaminDB","text":"documentation development version {laminr}. release documentation, please go docs.lamin.ai/.","code":""},{"path":"https://laminr.lamin.ai/reference/get_current_lamin_instance.html","id":null,"dir":"Reference","previous_headings":"","what":"Get current LaminDB instance — get_current_lamin_instance","title":"Get current LaminDB instance — get_current_lamin_instance","text":"Get currently connected LaminDB instance","code":""},{"path":"https://laminr.lamin.ai/reference/get_current_lamin_instance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get current LaminDB instance — get_current_lamin_instance","text":"","code":"get_current_lamin_instance()"},{"path":"https://laminr.lamin.ai/reference/get_current_lamin_instance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get current LaminDB instance — get_current_lamin_instance","text":"slug current LaminDB instance, NULL invisibly instance found","code":""},{"path":"https://laminr.lamin.ai/reference/get_current_lamin_instance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get current LaminDB instance — get_current_lamin_instance","text":"done via get_current_lamin_settings() avoid importing Python lamindb","code":""},{"path":"https://laminr.lamin.ai/reference/get_current_lamin_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get current LaminDB settings — get_current_lamin_settings","title":"Get current LaminDB settings — get_current_lamin_settings","text":"Get current LaminDB settings R list","code":""},{"path":"https://laminr.lamin.ai/reference/get_current_lamin_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get current LaminDB settings — get_current_lamin_settings","text":"","code":"get_current_lamin_settings(minimal = FALSE)"},{"path":"https://laminr.lamin.ai/reference/get_current_lamin_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get current LaminDB settings — get_current_lamin_settings","text":"minimal TRUE, quickly extract minimal list important settings instead converting complete settings object","code":""},{"path":"https://laminr.lamin.ai/reference/get_current_lamin_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get current LaminDB settings — get_current_lamin_settings","text":"list current LaminDB settings","code":""},{"path":"https://laminr.lamin.ai/reference/get_current_lamin_settings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get current LaminDB settings — get_current_lamin_settings","text":"done using callr::r() avoid importing Python lamindb global environment","code":""},{"path":"https://laminr.lamin.ai/reference/get_current_lamin_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Get current LaminDB user — get_current_lamin_user","title":"Get current LaminDB user — get_current_lamin_user","text":"Get currently logged LaminDB user","code":""},{"path":"https://laminr.lamin.ai/reference/get_current_lamin_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get current LaminDB user — get_current_lamin_user","text":"","code":"get_current_lamin_user()"},{"path":"https://laminr.lamin.ai/reference/get_current_lamin_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get current LaminDB user — get_current_lamin_user","text":"handle current LaminDB user, NULL invisibly user found","code":""},{"path":"https://laminr.lamin.ai/reference/get_current_lamin_user.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get current LaminDB user — get_current_lamin_user","text":"done via get_current_lamin_settings() avoid importing Python lamindb","code":""},{"path":"https://laminr.lamin.ai/reference/import_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Python modules — import_module","title":"Import Python modules — import_module","text":"function can used import LaminDB Python modules additional checks nicer error messages.","code":""},{"path":"https://laminr.lamin.ai/reference/import_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Python modules — import_module","text":"","code":"import_module(module, ...)"},{"path":"https://laminr.lamin.ai/reference/import_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Python modules — import_module","text":"module name Python module import ... Arguments passed require_module options vector defined optional dependencies module required version string specifying version module require source source module requirement, example git+https://github.com/owner/module.git python_version string defining Python version require. Passed reticulate::py_require() silent Whether suppress message showing required","code":""},{"path":"https://laminr.lamin.ai/reference/import_module.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Python modules — import_module","text":"object representing Python package","code":""},{"path":"https://laminr.lamin.ai/reference/import_module.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import Python modules — import_module","text":"Python dependencies set using require_module() importing module used create ephemeral environment unless another environment found (see vignette(\"versions\", package = \"reticulate\")). Requirements lamindb module can controlled using environment variables differently, see https://docs.lamin.ai/setup-laminr details.","code":""},{"path":[]},{"path":"https://laminr.lamin.ai/reference/import_module.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Python modules — import_module","text":"","code":"if (FALSE) { # \\dontrun{ # Import lamindb to start interacting with an instance ln <- import_module(\"lamindb\")  # Import lamindb with optional dependencies ln <- import_module(\"lamindb\", options = c(\"bionty\", \"wetlab\"))  # Import other LaminDB modules bt <- import_module(\"bionty\") wl <- import_module(\"wetlab\") cc <- import_module(\"clinicore\")  # Import any Python module np <- import_module(\"numpy\") } # }"},{"path":"https://laminr.lamin.ai/reference/install_lamindb.html","id":null,"dir":"Reference","previous_headings":"","what":"Install LaminDB — install_lamindb","title":"Install LaminDB — install_lamindb","text":"function deprecated replaced system automatically installs packages needed. See import_module(), require_module() reticulate::py_require() details. Create Python environment containing lamindb install lamindb existing environment.","code":""},{"path":"https://laminr.lamin.ai/reference/install_lamindb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install LaminDB — install_lamindb","text":"","code":"install_lamindb(   ...,   envname = \"r-lamindb\",   extra_packages = NULL,   new_env = identical(envname, \"r-lamindb\"),   use = TRUE )"},{"path":"https://laminr.lamin.ai/reference/install_lamindb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install LaminDB — install_lamindb","text":"... Additional arguments passed reticulate::py_install() envname String giving name environment install packages extra_packages vector giving names additional Python packages install new_env Whether remove existing virtualenv name creating new one requested packages use Whether attempt use new environment","code":""},{"path":"https://laminr.lamin.ai/reference/install_lamindb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install LaminDB — install_lamindb","text":"NULL, invisibly","code":""},{"path":"https://laminr.lamin.ai/reference/install_lamindb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install LaminDB — install_lamindb","text":"","code":"if (FALSE) { # \\dontrun{ # Using import_module() will automatically install packages ln <- import_module(\"lamindb\")  # Create a Python environment with lamindb # This approach is deprecated install_lamindb()  # Add additional packages to the environment install_lamindb(extra_packages = c(\"bionty\", \"wetlab\"))  # Install into a different environment install_lamindb(envvname = \"your-env\") } # }"},{"path":"https://laminr.lamin.ai/reference/lamin_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to a LaminDB instance — lamin_connect","title":"Connect to a LaminDB instance — lamin_connect","text":"Connect LaminDB instance calling lamin connect command line","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to a LaminDB instance — lamin_connect","text":"","code":"lamin_connect(instance)"},{"path":"https://laminr.lamin.ai/reference/lamin_connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to a LaminDB instance — lamin_connect","text":"instance Either slug giving instance connect (<owner>/<name>) instance URL (https://lamin.ai/owner/name)","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_connect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to a LaminDB instance — lamin_connect","text":"Running set LaminDB auto-connect option True auto-connect instance importing Python lamindb.","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_connect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to a LaminDB instance — lamin_connect","text":"","code":"if (FALSE) { # \\dontrun{ lamin_connect(\"laminlabs/cellxgene\") } # }"},{"path":"https://laminr.lamin.ai/reference/lamin_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"LaminDB delete — lamin_delete","title":"LaminDB delete — lamin_delete","text":"Delete LaminDB entity. Currently supports instances.","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LaminDB delete — lamin_delete","text":"","code":"lamin_delete(instance, force = FALSE)"},{"path":"https://laminr.lamin.ai/reference/lamin_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LaminDB delete — lamin_delete","text":"instance Identifier instance delete (e.g. \"owner/name\") force Whether force deletion without asking confirmation","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_delete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LaminDB delete — lamin_delete","text":"","code":"if (FALSE) { # \\dontrun{ lamin_init(\"to-delete\") lamin_delete(\"to-delete\") } # }"},{"path":"https://laminr.lamin.ai/reference/lamin_disconnect.html","id":null,"dir":"Reference","previous_headings":"","what":"Disconnect from a LaminDB instance — lamin_disconnect","title":"Disconnect from a LaminDB instance — lamin_disconnect","text":"Disconnect current LaminDB instance calling lamin connect command line","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_disconnect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disconnect from a LaminDB instance — lamin_disconnect","text":"","code":"lamin_disconnect()"},{"path":"https://laminr.lamin.ai/reference/lamin_disconnect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disconnect from a LaminDB instance — lamin_disconnect","text":"","code":"if (FALSE) { # \\dontrun{ lamin_disconnect() } # }"},{"path":"https://laminr.lamin.ai/reference/lamin_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialise LaminDB — lamin_init","title":"Initialise LaminDB — lamin_init","text":"Initialise new LaminDB instance","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialise LaminDB — lamin_init","text":"","code":"lamin_init(storage, name = NULL, db = NULL, modules = NULL)  lamin_init_temp(   name = \"laminr-temp\",   db = NULL,   modules = NULL,   add_timestamp = TRUE,   envir = parent.frame() )"},{"path":"https://laminr.lamin.ai/reference/lamin_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialise LaminDB — lamin_init","text":"storage local directory, AWS S3 bucket Google Cloud Storage bucket name name instance db Postgres database connection URL, use NULL SQLite. modules vector modules include (e.g. \"bionty\") add_timestamp Whether append timestamp name make unique envir environment passed withr::defer()","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_init.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialise LaminDB — lamin_init","text":"lamin_init_temp(), time stamp appended name (add_timestamp = TRUE) new instance initialised lamin_init() using temporary directory. lamin_delete() call registered exit handler withr::defer() clean instance envir finishes. lamin_init_temp() function mostly internal use cases users want lamin_init().","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialise LaminDB — lamin_init","text":"","code":"if (FALSE) { # \\dontrun{ lamin_init(\"mydata\", modules = c(\"bionty\", \"wetlab\")) } # }"},{"path":"https://laminr.lamin.ai/reference/lamin_login.html","id":null,"dir":"Reference","previous_headings":"","what":"Log into LaminDB — lamin_login","title":"Log into LaminDB — lamin_login","text":"Log LaminDB user","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_login.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log into LaminDB — lamin_login","text":"","code":"lamin_login(user = NULL, api_key = NULL)"},{"path":"https://laminr.lamin.ai/reference/lamin_login.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log into LaminDB — lamin_login","text":"user Handle user login api_key API key user","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_login.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log into LaminDB — lamin_login","text":"Depending input, one commands run (order): user set lamin login <user> Else api_key set set LAMIN_API_KEY environment variable temporarily withr::with_envvar() run lamin login Else stored user handle run lamin login <handle> Else LAMIN_API_KEY environment variable set run lamin login Otherwise, exit error","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_logout.html","id":null,"dir":"Reference","previous_headings":"","what":"Log out of LaminDB — lamin_logout","title":"Log out of LaminDB — lamin_logout","text":"Log LaminDB","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_logout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log out of LaminDB — lamin_logout","text":"","code":"lamin_logout()"},{"path":"https://laminr.lamin.ai/reference/lamin_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save to a LaminDB instance — lamin_save","title":"Save to a LaminDB instance — lamin_save","text":"Save file folder LaminDB instance calling lamin save command line","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save to a LaminDB instance — lamin_save","text":"","code":"lamin_save(filepath, key = NULL, description = NULL, registry = NULL)"},{"path":"https://laminr.lamin.ai/reference/lamin_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save to a LaminDB instance — lamin_save","text":"filepath Path file folder save key key saved item description description saved item registry registry saved item","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_save.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save to a LaminDB instance — lamin_save","text":"See lamin save --help details database entries created different file types","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_save.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save to a LaminDB instance — lamin_save","text":"","code":"if (FALSE) { # \\dontrun{ my_file <- tempfile() lamin_save(my_file) } # }"},{"path":"https://laminr.lamin.ai/reference/lamin_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Lamin settings — lamin_settings","title":"Lamin settings — lamin_settings","text":"Print current LaminDB settings calling lamin settings command line","code":""},{"path":"https://laminr.lamin.ai/reference/lamin_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lamin settings — lamin_settings","text":"","code":"lamin_settings()"},{"path":"https://laminr.lamin.ai/reference/lamin_settings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lamin settings — lamin_settings","text":"","code":"if (FALSE) { # \\dontrun{ lamin_settings() } # }"},{"path":"https://laminr.lamin.ai/reference/laminr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"laminr: Client for 'LaminDB' — laminr-package","title":"laminr: Client for 'LaminDB' — laminr-package","text":"Interact 'LaminDB'. 'LaminDB' open-source data framework biology. package allows query download data 'LaminDB' instances.","code":""},{"path":[]},{"path":"https://laminr.lamin.ai/reference/laminr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"laminr: Client for 'LaminDB' — laminr-package","text":"Maintainer: Robrecht Cannoodt robrecht@lamin.ai (ORCID) Authors: Luke Zappia luke@data-intuitive.com (ORCID) Data Intuitive info@data-intuitive.com Lamin Labs open-source@lamin.ai [copyright holder]","code":""},{"path":"https://laminr.lamin.ai/reference/laminr_status.html","id":null,"dir":"Reference","previous_headings":"","what":"laminr status — laminr_status","title":"laminr status — laminr_status","text":"Overview current status laminr package dependencies. Can useful debugging.","code":""},{"path":"https://laminr.lamin.ai/reference/laminr_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"laminr status — laminr_status","text":"","code":"laminr_status()"},{"path":"https://laminr.lamin.ai/reference/laminr_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"laminr status — laminr_status","text":"laminr_status object","code":""},{"path":"https://laminr.lamin.ai/reference/laminr_status.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"laminr status — laminr_status","text":"Provides information can useful debugging. run function error occurs, set options(error = function() { print(laminr::laminr_status() }). Note used caution print status whenever error occurs.","code":""},{"path":"https://laminr.lamin.ai/reference/laminr_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"laminr status — laminr_status","text":"","code":"laminr_status() #>  #> ── laminr 1.1.1.9008 ─────────────────────────────────────────────────────────── #>  #> ── Environment Variables ── #>  #> `LAMINR_LAMINDB_VERSION`: \"devel\" #> `LAMINR_LAMINDB_OPTIONS`: \"bionty\" #>  #> ── Settings ── #>  #> ✖ Not connected to an instance #>  #> ── Python ── #>  #> ✖ Python not available"},{"path":"https://laminr.lamin.ai/reference/require_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Require a Python module — require_module","title":"Require a Python module — require_module","text":"function can used require Python modules available laminr  additional checks nicer error messages.","code":""},{"path":"https://laminr.lamin.ai/reference/require_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Require a Python module — require_module","text":"","code":"require_module(   module,   options = NULL,   version = NULL,   source = NULL,   python_version = NULL,   silent = FALSE )"},{"path":"https://laminr.lamin.ai/reference/require_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Require a Python module — require_module","text":"module name Python module require options vector defined optional dependencies module required version string specifying version module require source source module requirement, example git+https://github.com/owner/module.git python_version string defining Python version require. Passed reticulate::py_require() silent Whether suppress message showing required","code":""},{"path":"https://laminr.lamin.ai/reference/require_module.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Require a Python module — require_module","text":"result reticulate::py_require","code":""},{"path":"https://laminr.lamin.ai/reference/require_module.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Require a Python module — require_module","text":"Python dependencies set using reticulate::py_require(). connection Python already initialized requested module already list requirements call reticulate::py_require() made avoid errors/warnings. means required versions etc. need set Python initalized.","code":""},{"path":"https://laminr.lamin.ai/reference/require_module.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Require a Python module — require_module","text":"Setting options = c(\"opt1\", \"opt2\") results \"module[opt1,opt2]\" Setting version = \">=1.0.0\" results \"module>=1.0.0\" Setting source = \"my_source\" results \"module @ my_source\" Setting results \"module[opt1,opt2]>=1.0.0 @ my_source\"","code":""},{"path":[]},{"path":"https://laminr.lamin.ai/reference/require_module.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Require a Python module — require_module","text":"","code":"if (FALSE) { # \\dontrun{ # Require lamindb require_module(\"lamindb\")  # Require a specific version of lamindb require_module(\"lamindb\", version = \">=1.2\")  # Require require lamindb with options require_module(\"lamindb\", options = c(\"bionty\", \"wetlab\"))  # Require the development version of lamindb from GitHub require_module(\"lamindb\", source = \"git+https://github.com/laminlabs/lamindb.git\")  # Require lamindb with a specific Python version require_module(\"lamindb\", python_version = \"3.12\") } # }"}]
