---
title: "Feature List and Roadmap"
vignette: >
  %\VignetteIndexEntry{Feature List and Roadmap}
  %\VignetteEncoding{UTF-8}
  %\VignetteEngine{quarto::html}
knitr:
  opts_chunk: 
    collapse: true
    comment: "#>"
---

This document outlines the features of the `laminr` package and the roadmap for future development.

## Features

### Connect to an instance

### Query & search

* [x] **Query exactly one record** (`Registry$get(...)`): Fetch a single record by ID.
* [ ] **Query sets of records** (`Registry$filter(...)`): Fetch multiple records based on filters.
  - [ ] `$df()`: Returns a data frame with each record in a row-
  - [ ] `$all()`: Returns all records as a `QuerySet`.
  - [ ] `$one()`: Return exactly one record.
  - [ ] `$one_or_none()`: Return one record or `NULL`.
* [ ] **Search for records** (`Registry$search(...)`): Search for records based on a query string.
* [ ] **Leverage relationships** (`Artifact$filter(created_by__handle__startswith = "testuse")$df()`): Query records based on relationships. Note: Is this possible with the current API?
* [ ] **Comparators**: Use comparators in filters.
  - [ ] `and`: Example: `Artifact$filter(suffix = ".jpg", created_by = user)`
  - [ ] `less than` / `greater than`: Example: `Artifact$filter(size__lt = 1e4)`
  - [ ] `in`: Example: `Artifact$filter(suffix_in = [".jpg", ".fastq.gz"])`
  - [ ] `order by`: Example: `Artifact$filter().order_by("created_at")`
  - [ ] `contains`: Example: `Artifact$filter(name__contains = "test")`
  - [ ] `startswith`: Example: `Artifact$filter(name__startswith = "test")`
  - [ ] `or`: Example: `...`
  - [ ] `not`: Example: `...`

### Track notebooks & scripts

...

### Curate datasets

...

### Access public ontologies

...

### Manage biological registries

...

### Manage schema modules

...

### Transfer data

...

## Roadmap

### Version 0.1.0

A first version of the package which allows users to query and search records.

### Version 0.2.0

...
